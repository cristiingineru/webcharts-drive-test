{"version":3,"sources":["niDataPipeline.js","niGraphDataPipeline.js","niChartDataPipeline.js","ni-cartesian-graph-base.js","ni-cartesian-graph.js","ni-chart.js","ni-intensity-graph.js","ni-cartesian-axis.js","ni-color-scale.js","ni-cartesian-plot.js","ni-cartesian-plot-renderer.js","ni-cursor.js"],"names":["NationalInstruments","HtmlVI","DataPipeline","decimateAW","series","start","end","buckets","startIndex","step","endIndex","decimate1D","i","index","iindex","length","data","datapoints","points","res","newBucket","max","Infinity","maxIndex","min","minIndex","Math","floor","nextBucket","prepareBucket","GraphDataPipeline","DataTypesEnum","Object","freeze","niAnalogWaveform","niAnalogWaveformArray","XYClusterOfArrays","XYArrayOfClusters","XYArrayOfClusterOfArrays","XYArrayOfArrayOfClusters","oneDimensionNumericArray","twoDimensionsNumericArray","oneDimensionComplexArray","twoDimensionsComplexArray","empty","unknown","graphDataPipeline","ComplexNumber","window","NIComplex","AnalogWaveform","NIAnalogWaveform","proto","prototype","toFlot","graph","value","valueType","convertToFlotFormat","isWaveform","Array","isArray","Y","isWaveformArray","isXYClusterOfArrays","keys","every","key","isXYArrayOfClusters","isXYArrayOfClusterOfArrays","isXYArrayOfArrayOfClusters","is1DComplexArray","is2DComplexArray","isArrayBufferView","ArrayBuffer","isView","isViewToStrings","dataStr","toString","call","indexOf","inferDataType","waveformToFlotFormat","waveform","flatdata","t0","toAbsoluteTime","dt","decimate","xyClusterOfArraysToFlotFormat","xydata","result","count","push","xyArrayOfClustersToFlotFormat","xyArrayOfClusterOfArraysToFlotFormat","xyDataArray","map","xyArrayOfArrayOfClustersToFlotFormat","dataValuesArray2D","j","dataValuesArray","channelName","updatePlotName","parseFromString","NI_SUPPORT","NISupport","ChartDataPipeline","loadValueIntoHistoryBuffer","historyBuffer","appendArray","width","setWidth","col","error","this","chart","Elements","CartesianGraphBase","child","parent","$","Globals","jQuery","inheritFromParent","plotsUpdatesEnabled","graphConfigPending","getSettings","settings","lines","show","lineWidth","shadowSize","axisLabels","xaxes","yaxes","zoom","interactive","trigger","pan","selection","mode","grid","configureGraph","cartesianGraphSettings","plotAreaMargin","margin","JSON","parse","cursors","axes","axis","a","getViewConfig","position","cursor","c","graphTools","allowsScrollWheelZoom","allowsPan","updateGraphConfig","childElement","graphdiv","undefined","cartesianGraphData","createData","plots","parsedValue","setHover","setGridStyle","gridEl","plot","that","getCursors","forEach","cookie","setCursor","log","message","onCursorUpdates","event","cursordata","target","updateCursorElement","throttlePlotUpdates","throttle","updateGraphConfigWhenPlotsUpdatesAreEnabled","name","label","dataSeries","plotConfig","setData","setupGrid","draw","updateData","addAllProperties","targetPrototype","addProperty","propertyName","defaultValue","fireEvent","addNonSignalingProperty","isElementValueProperty","createdCallback","plotLegend","cursorLegend","scaleLegend","tooltip","findGraphItems_early","myChildItems","axisItemName","CartesianPlot","elementInfo","tagName","toUpperCase","plotItemName","CartesianAxis","children","forceResize","size","clearTextCache","resize","createGraph","document","createElement","style","height","className","appendChild","id","uniqueId","fakeGrid","visibility","e","bind","pos","item","seriesIndex","x","datapoint","y","hoverFormat","str","format","html","css","top","pageY","offsetTop","left","pageX","offsetLeft","fadeIn","hide","getPlaceholder","attachedCallback","graphChildElements","firstCall","addGraphItemListeners","attachLegends","childElements","addEventListener","evt","detail","element","splice","notifyPlotLegend","notifyScaleLegend","notifyCursorLegend","originalSource","registerPlotLegend","eventConfig","bubbles","cancelable","dispatchEvent","CustomEvent","registerCursorLegend","registerScaleLegend","registerGraphTools","on","ranges","notifyGraphTools","graphElement","legendTags","parentElement","myLegends","graphName","niControlId","legend","attachToGraph","propertyUpdated","args","arguments","replace","match","number","parseInt","len1","toFixed","len2","toExponential","graphData","graphSettings","isHoverable","hoverable","getComputedStyle","borderStyle","borderBottomWidth","borderTopWidth","borderLeftWidth","borderRightWidth","borderWidth","Number","bottom","right","color","borderColor","bgColor","backgroundColor","Visual","CartesianGraph","defineElementInfo","Chart","global","chartDataPipeline","setHistoryBuffer","getHistoryBuffer","HistoryBuffer","bufferSize","IntensityGraph","ScaleTypeEnum","COLORSCALE","COLORSCALEGRADIENT","SCALETYPE_ENUM","h","w","parsedData","dataRange","dataMin","dataMax","sqrt","tempMin","tempMax","buf","autoScaleColor","intensitygraph","colorScaleAutoScale","colorScaleMin","colorScaleMax","colorScaleLabel","colorScaleShow","colorScaleFont","gradient","defaultData","isColorScale","type","markers","autoScale","range","lowColor","highColor","axisLabel","font","showMinorTicks","showTicks","gridLines","reserveSpace","labelWidth","labelHeight","disablePan","disableZoom","graphdata","NINumericFormatters","escapeHtmlString","string","entityMap","&","<",">","\"","'","/","`","String","s","isTimeAxis","toFlotTimeFormat","siTickFormatter","num","toSiNotation","tickDecimals","roundUsing","roundFunction","precisionDigits","precision","pow","tempNumber","getDecTickFormatter","options","len","slice","toDecPrecisionNotation","toDecFixedNotation","chooseTickFormatter","showTickLabels","colonMarkIndex","decFormatTypeSubstring","_parentGraph","sendEventToParentGraph","detachedCallback","setFont","fontSize","fontFamily","fontWeight","fontStyle","textDecoration","currStyle","flotConfig","showLabel","axisPosition","minimum","maximum","logScale","timeformat","tickFormatter","parseFloat","weight","family","getFlotAxis","getAxes","filter","scaleOnce","datamin","datamax","syncWithFlot","_autoScale","_minimum","_maximum","ColorScale","colorScaleAxis","getYAxes","defaultPlotConfig","addPlotItemListeners","plotRenderer","getYAxisIndexByNIControlID","axisRef","getXAxisIndexByNIControlID","enableHover","xaxis","yaxis","CartesianPlotRenderer","_parentPlot","sendEventToParentPlot","toFlotLineStyle","toFillTowards","areaBaseLine","areaFillOpacity","getColor","lineStroke","pointColor","areaFill","barFill","fill","zero","fillTowards","dashes","lineStyle","radius","pointSize","symbol","pointShape","bars","barWidth","align","Cursor","_x","relativeX","_y","relativeY","crosshairStyle","showValuesRelativeToSeries","showValue","cursorColor","snapToPlot","snapToData","targetShape"],"mappings":"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","file":"webcharts.min.js","sourcesContent":["//****************************************\n// GraphDataPipeline\n// common utility functions for conversion of LabVIEW datatypes flot data series\n// used by graphs and charts.\n// National Instruments Copyright 2016\n//****************************************\n\n(function () {\n    'use strict';\n\n    NationalInstruments.HtmlVI.DataPipeline = {};\n\n    NationalInstruments.HtmlVI.DataPipeline.decimateAW = function (series, start, end, buckets) {\n        var startIndex = (start - series.start) / series.step,\n        endIndex = (end - series.start) / series.step;\n\n        return NationalInstruments.HtmlVI.DataPipeline.decimate1D(series, startIndex, endIndex, buckets);\n    }\n\n    NationalInstruments.HtmlVI.DataPipeline.decimate1D = function (series, start, end, buckets) {\n        var i,\n            j,\n            index = 0,\n            iindex = 0,\n            length = 0,\n            step = buckets / (end - start),\n            data = series.datapoints.points,\n            res = [],\n            newBucket = true,\n            max = -Infinity, maxIndex= -1,\n            min = Infinity, minIndex= -1;\n\n        var startIndex = Math.min(Math.max(0, Math.floor(start)), data.length/2);\n        var endIndex = (end > 0) ? Math.min((data.length/2), Math.floor(end+2)) : 0;\n\n        var nextBucket = function () {\n            if (minIndex === maxIndex) {\n                res[iindex] = minIndex;\n                res[iindex + 1] = min;\n                iindex += 2;\n            } else {\n                if (minIndex < maxIndex) {\n                    res[iindex] = minIndex;\n                    res[iindex + 1] = min;\n                    res[iindex + 2] = maxIndex;\n                    res[iindex + 3] = max;\n                } else {\n                    res[iindex] = maxIndex;\n                    res[iindex + 1] = max;\n                    res[iindex + 2] = minIndex;\n                    res[iindex + 3] = min;\n                }\n                iindex += 4;\n            }\n        }\n\n        var prepareBucket = function () {\n            max = -Infinity;\n            maxIndex= -1;\n            min = Infinity;\n            minIndex= -1;\n        }\n\n        length = endIndex - startIndex;\n\n        if (buckets > length) {\n            step = 1;\n        }\n\n        for (i = startIndex * 2; i < endIndex * 2; i += 2) {\n            if (newBucket) {\n                prepareBucket();\n                newBucket = false;\n            }\n\n            if (data[i+1] < min) {\n                minIndex = data[i];\n                min = data[i+1];\n            }\n            if (data[i+1] > max) {\n                maxIndex = data[i];\n                max = data[i+1];\n            }\n\n            if (Math.floor(index) !== Math.floor(index + step)) {\n                nextBucket();\n                newBucket = true;\n            }\n\n            index += step;\n        }\n\n        if (!newBucket) {\n            nextBucket();\n        }\n\n        return res;\n    }\n\n}());\n","//****************************************\n// GraphDataPipeline\n// Utility functions that convert LabVIEW datatypes allowed for graphs to flot data series\n// National Instruments Copyright 2016\n//****************************************\n\n/**\n## Data types supported by the ni-cartesian-graph\n\nData can be passed to a graph either through writing to the element value\nproperty or using API access (the setData() method on the element).\n\nHere is a list of supported data types:\n*/\n\n(function () {\n    'use strict';\n\n    // Static private reference aliases\n    // None\n\n    NationalInstruments.HtmlVI.DataPipeline.GraphDataPipeline = function () {\n        // Private variables\n    };\n\n    var DataTypesEnum = Object.freeze({\n        niAnalogWaveform: 'niAnalogWaveform',\n        niAnalogWaveformArray: 'niAnalogWaveformArray',\n        XYClusterOfArrays: 'XYClusterOfArrays',\n        XYArrayOfClusters: 'XYArrayOfClusters',\n        XYArrayOfClusterOfArrays: 'XYArrayOfClusterOfArrays',\n        XYArrayOfArrayOfClusters: 'XYArrayOfArrayOfClusters',\n        oneDimensionNumericArray: '1DNumericArray',\n        twoDimensionsNumericArray: '2DNumericArray',\n        oneDimensionComplexArray: '1DComplexArray',\n        twoDimensionsComplexArray: '2DComplexArray',\n        empty: 'empty',\n        unknown: 'unknown'\n    });\n\n    var graphDataPipeline = NationalInstruments.HtmlVI.DataPipeline.GraphDataPipeline;\n    var ComplexNumber = window.NIComplex || NationalInstruments.HtmlVI.NIComplex;\n    var AnalogWaveform = window.NIAnalogWaveform || NationalInstruments.HtmlVI.NIAnalogWaveform;\n\n    var proto = graphDataPipeline.prototype;\n\n    // Public prototype methods\n    proto.toFlot = function (graph, value, valueType) {\n        return convertToFlotFormat(graph, value, valueType);\n    };\n\n    // Private methods\n    var isWaveform = function (value) {\n        return (!Array.isArray(value)) && typeof value === 'object' && Array.isArray(value.Y);\n    };\n\n    var isWaveformArray = function (value) {\n        return (Array.isArray(value)) && isWaveform(value[0]);\n    };\n\n    var isXYClusterOfArrays = function (value) {\n        return (!Array.isArray(value)) && typeof value === 'object' &&\n            Object.keys(value).length === 2 &&\n            Object.keys(value).every(function (key) {\n            return Array.isArray(value[key]);\n        });\n    };\n\n    var isXYArrayOfClusters = function (value) {\n        return (Array.isArray(value)) && (!Array.isArray(value[0])) &&\n            typeof value[0] === 'object' && Object.keys(value[0]).length === 2 &&\n            typeof value[0][Object.keys(value[0])[0]] === 'number';\n    };\n\n    var isXYArrayOfClusterOfArrays = function (value) {\n        return Array.isArray(value) && isXYClusterOfArrays(value[0]);\n    };\n\n    var isXYArrayOfArrayOfClusters = function (value) {\n        return Array.isArray(value) && isXYArrayOfClusters(value[0]);\n    };\n\n    var is1DComplexArray = function (value) {\n        return Array.isArray(value) &&\n        (typeof value[0] === 'string' || value[0] instanceof ComplexNumber);\n    };\n\n    var is2DComplexArray = function (value) {\n        return Array.isArray(value) && Array.isArray(value[0]) &&\n        (typeof value[0][0] === 'string' || value[0][0] instanceof ComplexNumber);\n    };\n\n    var isArrayBufferView = function(data) {\n        if (typeof ArrayBuffer.isView === 'function') {\n            return ArrayBuffer.isView(data);\n        } else {\n            var isViewToStrings = [\n              // The TypedArray types\n              '[object Int8Array]',\n              '[object Uint8Array]',\n              '[object Uint8ClampedArray]',\n              '[object Int16Array]',\n              '[object Uint16Array]',\n              '[object Int32Array]',\n              '[object Uint32Array]',\n              '[object Float32Array]',\n              '[object Float64Array]',\n              // The DataView type\n              '[object DataView]'\n            ];\n\n            var dataStr = Object.prototype.toString.call(data);\n\n            return isViewToStrings.indexOf(dataStr) !== -1;\n        }\n    }\n\n    var inferDataType = function (data) {\n        if (isWaveform(data)) {\n            return DataTypesEnum.niAnalogWaveform;\n        }\n\n        if (isWaveformArray(data)) {\n            return DataTypesEnum.niAnalogWaveformArray;\n        }\n\n        if (isXYClusterOfArrays(data)) {\n            return DataTypesEnum.XYClusterOfArrays;\n        }\n\n        if (isXYArrayOfClusters(data)) {\n            return DataTypesEnum.XYArrayOfClusters;\n        }\n\n        if (!(Array.isArray(data) || isArrayBufferView(data))) {\n            return DataTypesEnum.unknown;\n        }\n\n        if (data.length === 0) {\n            return DataTypesEnum.empty;\n        }\n\n        if (typeof data[0] === 'number') {\n            return DataTypesEnum.oneDimensionNumericArray;\n        }\n\n        if (isXYArrayOfClusterOfArrays(data)) {\n            return DataTypesEnum.XYArrayOfClusterOfArrays;\n        }\n\n        if (isXYArrayOfArrayOfClusters(data)) {\n            return DataTypesEnum.XYArrayOfArrayOfClusters;\n        }\n\n        if (is1DComplexArray(data)) {\n            return DataTypesEnum.oneDimensionComplexArray;\n        }\n\n        if (is2DComplexArray(data)) {\n            return DataTypesEnum.twoDimensionsComplexArray;\n        }\n\n        if (Array.isArray(data[0]) || isArrayBufferView(data[0])) {\n            return DataTypesEnum.twoDimensionsNumericArray;\n        }\n\n        return DataTypesEnum.unknown;\n    };\n\n    proto.inferDataType = inferDataType;\n\n    var waveformToFlotFormat = function (waveform) {\n        return {flatdata: true, data: waveform.Y, start: waveform.t0.toAbsoluteTime(), step: waveform.dt, decimate: NationalInstruments.HtmlVI.DataPipeline.decimateAW};\n    };\n\n    var xyClusterOfArraysToFlotFormat = function (xydata) {\n        var result = [];\n        var keys = Object.keys(xydata);\n        var count = Math.min(xydata[keys[0]].length, xydata[keys[1]].length);\n\n        for (var i = 0; i < count; i++) {\n            result.push([xydata[keys[0]][i], xydata[keys[1]][i]]);\n        }\n\n        return result;\n    };\n\n    var xyArrayOfClustersToFlotFormat = function (xydata) {\n        var result = [];\n\n        var keys = Object.keys(xydata[0] || {});\n\n        for (var i = 0; i < xydata.length; i++) {\n            result.push([xydata[i][keys[0]], xydata[i][keys[1]]]);\n        }\n\n        return result;\n    };\n\n    var xyArrayOfClusterOfArraysToFlotFormat = function (xyDataArray) {\n        return xyDataArray.map(function (xydata) {\n            return xyClusterOfArraysToFlotFormat(xydata);\n        });\n    };\n\n    var xyArrayOfArrayOfClustersToFlotFormat = function (xyDataArray) {\n        return xyDataArray.map(function (xydata) {\n            return xyArrayOfClustersToFlotFormat(xydata);\n        });\n    };\n\n    var convertToFlotFormat = function (graph, data, valueType) {\n        // jshint unused: vars\n        var dataValuesArray = [];\n        var dataValuesArray2D, waveform;\n\n        var i, j;\n\n        switch (inferDataType(data)) {\n\n            /**\n            * **A 1D array of numerics**\n            ```js\n            [a1, a2, a3]\n            ```\n            Will be drawn as a single plot. It's an efficient and fast way to\n            pass data to the graph.\n\n            A typed array view is also allowed.\n            */\n            case DataTypesEnum.oneDimensionNumericArray:\n                return [{flatdata: true, data: data, start: 0, step: 1, decimate: NationalInstruments.HtmlVI.DataPipeline.decimate1D}];\n\n            /**\n            * **A 2D array of numerics**\n            ```js\n            [[a1, a2, a3], [b1, b2, b3]]\n            ```\n            Will be drawn as multiple plots. It's an efficient and fast way to\n            pass data to the graph.\n\n            An array of typed array views is also allowed. \n            */\n            case DataTypesEnum.twoDimensionsNumericArray:\n                dataValuesArray2D = [];\n                for (j = 0; j < data.length; j++) {\n                    dataValuesArray = [];\n\n                    dataValuesArray2D.push({flatdata: true, start: 0, step: 1, data: data[j], decimate: NationalInstruments.HtmlVI.DataPipeline.decimate1D});\n                }\n\n                return dataValuesArray2D;\n\n            /**\n            * **An analogWaveform**\n            ```js\n            var data = new NIAnalogWaveform({\n                t0: new NITimestamp(),\n                dt: 0.001, // 1 ms\n                Y: [a1, a2, a3]\n            });\n            ```\n            Will be drawn as a single plot. It's an\n            efficient and fast way to pass data to the graph\n            */\n            case DataTypesEnum.niAnalogWaveform:\n                if (data instanceof AnalogWaveform) {\n                    waveform = data;\n                } else {\n                    waveform = new AnalogWaveform(data);\n                }\n                if (typeof waveform.channelName === 'string' && waveform.channelName.length > 0) {\n                    graph.updatePlotName(0, waveform.channelName);\n                }\n\n                return [waveformToFlotFormat(waveform)];\n\n            /**\n            * **An array of analogWaveforms**\n            ```js\n            var aw0 = new NIAnalogWaveform({\n                t0: new NITimestamp(),\n                dt: 0.001, // 1 ms\n                Y: [a1, a2, a3]\n            });\n            var aw1 = new NIAnalogWaveform({\n                t0: new NITimestamp(),\n                dt: 0.001, // 1 ms\n                Y: [b1, b2, b3]\n            });\n            var data = [aw0, aw1];\n            ```\n            Will be drawn as multiple plots. It's an efficient and fast way to\n            pass data to the graph.\n            */\n            case DataTypesEnum.niAnalogWaveformArray:\n                dataValuesArray2D = [];\n                for (j = 0; j < data.length; j++) {\n                    if (data[j] instanceof AnalogWaveform) {\n                        waveform = data[j];\n                    } else {\n                        waveform = new AnalogWaveform(data[j]);\n                    }\n                    if (typeof waveform.channelName === 'string' && waveform.channelName.length > 0) {\n                        graph.updatePlotName(j, waveform.channelName);\n                    }\n\n                    dataValuesArray2D.push(waveformToFlotFormat(waveform));\n                }\n\n                return dataValuesArray2D;\n\n            /**\n            * **An object (cluster) of arrays**\n            ```js\n            var data = {a: [a1, a2, a3], b: [b1, b2, b3]};\n            ```\n             Will be drawn as a single XY plot,\n            the first array will hold the X coordinates and the second the Y\n            coordinates. This format is only recomended when you want to display\n            XY data, it's not particulary efficient or fast.\n            */\n            case DataTypesEnum.XYClusterOfArrays:\n                return [xyClusterOfArraysToFlotFormat(data)];\n\n            /**\n            * **An array of objects (clusters) of arrays**\n            ```js\n            var data = [\n                {a: [a1, a2, a3], b: [b1, b2, b3]},\n                {c: [c1, c2, c3], d: [d1, d2, d3]}\n            ];\n            ```\n            Will be drawn as multiple XY plots, the first array in the object\n            (cluster) will hold the X coordinates and the second the Y coordinates.\n            This format is only recomended when you want to display XY data,\n            it's not particulary efficient or fast.\n            */\n            case DataTypesEnum.XYArrayOfClusterOfArrays:\n                return xyArrayOfClusterOfArraysToFlotFormat(data);\n\n            /**\n            * **An array of objects (clusters)**\n            ```js\n            var data = [\n                {x: a1, y: b1},\n                {x: a2, y: b2},\n                {x: a3, y: b3},\n            ];\n            ```\n            Will be drawn as a single XY plot, the first element in the cluster\n            will hold the X coordinates and the second the Y coordinates. This\n            format is only recomended when you want to display XY data, it's not\n            particulary efficient or fast.\n            */\n            case DataTypesEnum.XYArrayOfClusters:\n                return [xyArrayOfClustersToFlotFormat(data)];\n\n            /**\n            * **An array of array of objects (clusters)**\n            ```js\n            var data = [\n                [{x: a1, y: b1}, {x: a2, y: b2}, {x: a3, y: b3}],\n                [{x: c1, y: d1}, {x: c2, y: d2}, {x: c3, y: d3}]\n            ];\n            ```\n            Will be drawn as multiple XY plots, the first element in the cluster\n            will hold the X coordinates and the second the Y coordinates. This\n            format is only recomended when you want to display XY data, it's not\n            particulary efficient or fast.\n            */\n            case DataTypesEnum.XYArrayOfArrayOfClusters:\n                return xyArrayOfArrayOfClustersToFlotFormat(data);\n\n            /**\n            * **An 1D array of Complex Numbers**\n            ```js\n            var a1 = new NIComplex(1, 2);\n            var a2 = new NIComplex(2, 3);\n            var a3 = new NIComplex(3, 4);\n            var data = [a1, a2, a3]; // array of complex numbers\n            var data2 = ['1+2i', '2+3i', '3+4i']; // also accepted as input\n            ```\n            Will be drawn as a single plot.\n            */\n            case DataTypesEnum.oneDimensionComplexArray:\n                for (i = 0; i < data.length; i++) {\n                    dataValuesArray.push(ComplexNumber.prototype.parseFromString(data[i]));\n                }\n\n                return [dataValuesArray];\n\n            /**\n            * **A 2D array of Complex Numbers**\n            ```js\n            var a1 = new NIComplex(1, 2);\n            var a2 = new NIComplex(2, 3);\n            var b1 = new NIComplex(3, 4);\n            var b2 = new NIComplex(4, 5);\n            var data = [[a1, a2], [b1, b2]]; // arrays of complex numbers\n            var data2 = [['1+2i', '2+3i'], ['3+4i', '4+5i']]; // also accepted as input\n            ```\n            Will be drawn as multiple plots.\n            */\n            case DataTypesEnum.twoDimensionsComplexArray:\n                dataValuesArray2D = [];\n                for (j = 0; j < data.length; j++) {\n                    dataValuesArray = [];\n                    for (i = 0; i < data[j].length; i++) {\n                        dataValuesArray.push(ComplexNumber.prototype.parseFromString(data[j][i]));\n                    }\n\n                    dataValuesArray2D.push(dataValuesArray);\n                }\n\n                return dataValuesArray2D;\n            default:\n        }\n\n        return dataValuesArray2D || [dataValuesArray];\n    };\n}());\n","//****************************************\n// ChartDataPipeline\n// Utility functions that load LabVIEW datatypes allowed for charts into history\n// buffers\n// National Instruments Copyright 2016\n//****************************************\n\n(function () {\n    'use strict';\n\n    // Static private reference aliases\n    var NI_SUPPORT = NationalInstruments.HtmlVI.NISupport;\n\n    NationalInstruments.HtmlVI.DataPipeline.ChartDataPipeline = function () {\n        // Private variables\n    };\n\n    var graphDataPipeline = NationalInstruments.HtmlVI.DataPipeline.GraphDataPipeline;\n\n    var proto = NationalInstruments.HtmlVI.DataPipeline.ChartDataPipeline.prototype;\n\n    // Public prototype methods\n    proto.loadValueIntoHistoryBuffer = function (value, historyBuffer) {\n        switch (graphDataPipeline.prototype.inferDataType(value)) {\n            case '1DNumericArray':\n                historyBuffer.appendArray(value);\n                break;\n            case '2DNumericArray':\n                var width = value.length;\n                historyBuffer.setWidth(width);\n                for (var i = 0; i < value[0].length; i++) {\n                    var col = [];\n                    for (var j = 0; j < width; j++) {\n                        col[j] = value[j][i];\n                    }\n                    historyBuffer.push(col);\n                }\n                break;\n            case 'empty':\n                break;\n            default:\n                NI_SUPPORT.error('Unsupported value', this.value);\n                break;\n        }\n    };\n\n    proto.toFlot = function (chart, value, valueType) {\n        // the chart is not using the element value as data, but the history buffer.\n        // We return an array of empty data series with the length equal with the\n        // width of the history buffer\n        var res = [];\n        var width = chart.historyBuffer.width;\n        for (var i = 0; i < width; i++) {\n            res[i] = [];\n        }\n        return res;\n    }\n\n}());\n","//****************************************\n// Cartesian Graph Base Prototype\n// DOM Registration: HTMLNICartesianGraph\n// National Instruments Copyright 2015\n//****************************************\n\n// Constructor Function: Empty (Not Invoked)\nNationalInstruments.HtmlVI.Elements.CartesianGraphBase = function () {\n    'use strict';\n};\n\n// Static Public Variables\n// None\n\n(function (child, parent) {\n    'use strict';\n    // Static Private Reference Aliases\n    var $ = NationalInstruments.Globals.jQuery;\n    var NI_SUPPORT = NationalInstruments.HtmlVI.NISupport;\n    var graphDataPipeline = NationalInstruments.HtmlVI.DataPipeline.GraphDataPipeline;\n\n    NI_SUPPORT.inheritFromParent(child, parent);\n    var proto = child.prototype;\n    var plotsUpdatesEnabled = true;\n    var graphConfigPending = false;\n\n    // Static Private Variables\n    // None\n\n    // Static Private Functions\n    // None\n\n    // Public Prototype Methods\n    proto.getSettings = function () {\n        var settings = {\n            lines: {\n                show: true,\n                lineWidth: 1\n            },\n            series: {\n                shadowSize: 0, // Drawing is faster without shadows\n                points: {\n                    lineWidth: 2 // in pixels\n                    //,fill: false // it's way faster if we don't fill the shapes. TODO: enable this\n                },\n            },\n            axisLabels: {\n                show: true\n            },\n            xaxes: [{}],\n            yaxes: [{}],\n            zoom: {\n                interactive: true,\n                trigger: null\n            },\n            pan: {\n                interactive: true\n            },\n            selection: {\n                mode: null\n            },\n            grid: {\n            }\n        };\n\n        return settings;\n    };\n\n    proto.configureGraph = function () {\n        var i;\n        var cartesianGraphSettings = this.getSettings();\n        if (this.plotAreaMargin !== '') {\n            cartesianGraphSettings.grid.margin = JSON.parse(this.plotAreaMargin);\n        }\n\n        // Apply Settings from host\n        cartesianGraphSettings.xaxes = [];\n        cartesianGraphSettings.yaxes = [];\n        cartesianGraphSettings.cursors = [];\n\n        for (i = 0; i < this.axes.length; i++) {\n            var axis = this.axes[i];\n            var a = axis.getViewConfig();\n\n            if (a) {\n                if (a.position && ((a.position === 'left') || (a.position === 'right'))) {\n                    cartesianGraphSettings.yaxes.push(a);\n                }\n\n                if (a.position && ((a.position === 'top') || (a.position === 'bottom'))) {\n                    cartesianGraphSettings.xaxes.push(a);\n                }\n            }\n        }\n\n        for (i = 0; i < this.cursors.length; i++) {\n            var cursor = this.cursors[i];\n            var c = cursor.getViewConfig();\n            cartesianGraphSettings.cursors.push(c);\n        }\n\n        if (this.graphTools) {\n            cartesianGraphSettings.zoom.interactive = this.graphTools.allowsScrollWheelZoom();\n            cartesianGraphSettings.pan.interactive = this.graphTools.allowsPan();\n            cartesianGraphSettings.selection.mode = this.graphTools.mode === 'zoom' ? 'smart' : null;\n        }\n\n        return cartesianGraphSettings;\n    };\n\n    proto.updateGraphConfig = function () {\n        var childElement = this.graphdiv;\n        if (childElement === undefined) {\n            return; // not ready yet\n        }\n\n        var cartesianGraphData = this.createData(this.plots, this.convertToFlotFormat(this.parsedValue));\n        var cartesianGraphSettings = this.configureGraph();\n        this.setHover(cartesianGraphData, cartesianGraphSettings);\n        this.setGridStyle(this.gridEl, cartesianGraphSettings);\n\n        try {\n            this.graph = $.plot(childElement, cartesianGraphData, cartesianGraphSettings);\n            var that = this;\n            this.graph.getCursors().forEach(function (cursor, i) {\n                /* place a cookie on the cursor */\n                cursor.cookie = that.cursors[i];\n                that.cursors[i].setCursor(cursor);\n            });\n        } catch (error) {\n            NI_SUPPORT.log(error.message);\n        }\n    };\n\n    proto.onCursorUpdates = function (event, cursordata) {\n        cursordata.forEach(function (cursor, i) {\n            cursor.target.cookie.updateCursorElement(cursordata[i]);\n        });\n    };\n\n    proto.throttlePlotUpdates = function (throttle) {\n        plotsUpdatesEnabled = !throttle;\n        if (plotsUpdatesEnabled && graphConfigPending) {\n            this.updateGraphConfig(); // keep the graph in sync\n            graphConfigPending = false;\n        }\n    };\n\n    proto.updateGraphConfigWhenPlotsUpdatesAreEnabled = function () {\n        if (plotsUpdatesEnabled) {\n            this.updateGraphConfig();\n            graphConfigPending = false;\n        } else {\n            graphConfigPending = true;\n        }\n    };\n\n    proto.convertToFlotFormat = function (value) {\n        return graphDataPipeline.prototype.toFlot(this, value);\n    };\n\n    proto.updatePlotName = function (index, name) {\n        if (name) {\n            if (this.plots[index]) {\n                this.plots[index].label = name;\n            }\n        }\n    };\n\n    proto.createData = function (plots, dataSeries) {\n        var plotConfig = [];\n\n        dataSeries.forEach(function (data, i) {\n            var plot = plots[i];\n            if (Array.isArray(data)) {\n                data = {data: data};\n            }\n\n            if (plot) {\n                plotConfig[i] = plot.getViewConfig();\n                plotConfig[i].data = (plot.show) ? data.data : [];\n                // TODO mix the properties in a better way\n                plotConfig[i].flatdata = data.flatdata;\n                plotConfig[i].start = data.start;\n                plotConfig[i].step = data.step;\n                plotConfig[i].decimate = data.decimate;\n            } else {\n                plotConfig[i] = data;\n            }\n        });\n\n        return plotConfig;\n    };\n\n    proto.setData = function (data) {\n        var graph = this.graph;\n\n        graph.setData(this.createData(this.plots, this.convertToFlotFormat(data)));\n        graph.setupGrid();\n        graph.draw();\n    };\n\n    proto.updateData = function () {\n        this.setData(this.parsedValue);\n    };\n\n    proto.addAllProperties = function (targetPrototype) {\n        parent.prototype.addAllProperties.call(this, targetPrototype);\n\n        proto.addProperty(targetPrototype, {\n            propertyName: 'value',\n            defaultValue: '[]',\n            fireEvent: true,\n            addNonSignalingProperty: true,\n            isElementValueProperty: true\n        });\n\n        /** **graph-ref** - a graph id used to bind legends to the graph*/\n        proto.addProperty(targetPrototype, {\n            propertyName: 'graphRef',\n            defaultValue: '',\n        });\n\n        /** **plot-area-margin** - TODO - document this*/\n        proto.addProperty(targetPrototype, {\n            propertyName: 'plotAreaMargin',\n            defaultValue: ''\n        });\n    };\n\n    proto.createdCallback = function () {\n        parent.prototype.createdCallback.call(this);\n\n        // Public Instance Properties\n        this.plots = [];\n        this.axes = [];\n        this.cursors = [];\n        this.plotLegend = null;\n        this.cursorLegend = null;\n        this.scaleLegend = null;\n        this.graphTools = null;\n        this.graphdiv = undefined;\n        this.tooltip = null;\n        this.parsedValue = null;\n\n        // Private Instance Properties\n        // None\n    };\n\n    proto.findGraphItems_early = function () {\n        var myChildItems = [],\n            axisItemName = NationalInstruments.HtmlVI.Elements.CartesianPlot.prototype.elementInfo.tagName.toUpperCase(),\n            plotItemName = NationalInstruments.HtmlVI.Elements.CartesianAxis.prototype.elementInfo.tagName.toUpperCase(),\n            i;\n\n        for (i = 0; i < this.children.length; i++) {\n            if (this.children[i].tagName === plotItemName) {\n                myChildItems.push(this.children[i]);\n            } else if (this.children[i].tagName === axisItemName) {\n                myChildItems.push(this.children[i]);\n            }\n        }\n\n        return myChildItems;\n    };\n\n    proto.forceResize = function (size) {\n        parent.prototype.forceResize.call(this, size);\n        var plot = this.graph;\n        if (plot !== undefined) {\n            plot.clearTextCache();\n            plot.resize();\n            plot.setupGrid();\n            plot.draw();\n        }\n    };\n\n    proto.createGraph = function () {\n        var that = this;\n        var childElement = document.createElement('div');\n        childElement.style.width = '100%';\n        childElement.style.height = '100%';\n        childElement.className = 'webchart-drawing-layer';\n        this.appendChild(childElement);\n        var tooltip = document.createElement('div');\n        tooltip.id = 'tooltip' + NI_SUPPORT.uniqueId();\n        tooltip.className = 'ni-graph-tooltip';\n        this.appendChild(tooltip);\n        this.tooltip = tooltip;\n        var fakeGrid = document.createElement('ni-grid-div');\n        fakeGrid.style.visibility = 'hidden';\n        this.appendChild(fakeGrid);\n        this.gridEl = fakeGrid;\n\n        this.graphdiv = childElement;\n\n        var cartesianGraphData = this.createData(this.plots, this.convertToFlotFormat(this.parsedValue));\n        var cartesianGraphSettings = this.configureGraph();\n        this.setHover(cartesianGraphData, cartesianGraphSettings);\n        this.setGridStyle(this.gridEl, cartesianGraphSettings);\n\n        try {\n            this.graph = $.plot(childElement, cartesianGraphData, cartesianGraphSettings);\n        } catch (e) {\n            NI_SUPPORT.log('Failed to create a flot chart. Make sure that the placeholder element has a non-zero size !');\n        }\n\n        $(childElement).bind('plothover', function (event, pos, item) {\n            if (item && that.plots[item.seriesIndex]) {\n                var x = item.datapoint[0],\n                    y = item.datapoint[1],\n                    hoverFormat = that.plots[item.seriesIndex].hoverFormat || '{0}, {1}',\n                    str = that.format(hoverFormat, x, y);\n\n                $(tooltip).html(str)\n                    .css({ top: item.pageY - that.offsetTop + 5, left: item.pageX - that.offsetLeft + 5 })\n                    .fadeIn(100);\n            } else {\n                $(tooltip).hide();\n            }\n        });\n\n        try {\n            this.graph.getPlaceholder().bind('cursorupdates', this.onCursorUpdates);\n            this.graph.getCursors().forEach(function (cursor, i) {\n                /* place a cookie on the cursor */\n                cursor.cookie = that.cursors[i];\n                that.cursors[i].setCursor(cursor);\n            });\n        } catch (e) { }\n    };\n\n    proto.attachedCallback = function () {\n        var firstCall = parent.prototype.attachedCallback.call(this), graphChildElements;\n\n        if (firstCall === true) {\n            graphChildElements = this.findGraphItems_early();\n            this.addGraphItemListeners(graphChildElements);\n            this.parsedValue = JSON.parse(this.value);\n            this.createGraph();\n            this.attachLegends();\n        }\n\n        return firstCall;\n    };\n\n    proto.addGraphItemListeners = function (childElements) {\n        var that = this;\n        that.addEventListener('ni-cartesian-plot-attached', function (evt) {\n            var i;\n\n            if (evt.target === that) {\n                that.plots.push(evt.detail.element);\n                for (i = 0; i < childElements.length; i++) {\n                    if (childElements[i] === evt.detail.element) {\n                        childElements.splice(i, 1);\n                        break;\n                    }\n                }\n\n                that.updateGraphConfigWhenPlotsUpdatesAreEnabled();\n                that.notifyPlotLegend('ni-cartesian-plot-attached', evt.detail.element);\n            }\n        });\n\n        that.addEventListener('ni-cartesian-plot-detached', function (evt) {\n            var i;\n\n            that.notifyPlotLegend('ni-cartesian-plot-detached', evt.detail.element);\n\n            if (evt.target === that) {\n                for (i = 0; i < that.plots.length; i++) {\n                    if (that.plots[i] === evt.detail.element) {\n                        that.plots.splice(i, 1);\n                        break;\n                    }\n                }\n\n                that.updateGraphConfigWhenPlotsUpdatesAreEnabled();\n            }\n        });\n\n        that.addEventListener('ni-cartesian-axis-attached', function (evt) {\n            var i;\n\n            if (evt.target === that) {\n                that.axes.push(evt.detail.element);\n                for (i = 0; i < childElements.length; i++) {\n                    if (childElements[i] === evt.detail.element) {\n                        childElements.splice(i, 1);\n                        break;\n                    }\n                }\n\n                that.updateGraphConfig();\n                that.notifyScaleLegend('ni-cartesian-axis-attached', evt.detail.element);\n            }\n        });\n\n        that.addEventListener('ni-cartesian-axis-detached', function (evt) {\n            var i;\n\n            if (evt.target === that) {\n                for (i = 0; i < that.axes.length; i++) {\n                    if (that.axes[i] === evt.detail.element) {\n                        that.axes.splice(i, 1);\n                        break;\n                    }\n                }\n\n                that.updateGraphConfig();\n                that.notifyScaleLegend('ni-cartesian-axis-detached', evt.detail.element);\n            }\n        });\n\n        that.addEventListener('ni-cursor-attached', function (evt) {\n            var i;\n\n            if (evt.target === that) {\n                that.cursors.push(evt.detail.element);\n                for (i = 0; i < childElements.length; i++) {\n                    if (childElements[i] === evt.detail.element) {\n                        childElements.splice(i, 1);\n                        break;\n                    }\n                }\n\n                that.updateGraphConfig();\n                that.notifyCursorLegend('ni-cursor-attached', evt.detail.element);\n            }\n        });\n\n        that.addEventListener('ni-cursor-detached', function (evt) {\n            var i;\n\n            if (evt.target === that) {\n                for (i = 0; i < that.cursors.length; i++) {\n                    if (that.cursors[i] === evt.detail.element) {\n                        that.cursors.splice(i, 1);\n                        break;\n                    }\n                }\n\n                that.updateGraphConfig();\n                that.notifyCursorLegend('ni-cursor-detached', evt.detail.element);\n            }\n        });\n\n        that.addEventListener('ni-axis-changed', function (evt) {\n            that.updateGraphConfig();\n            that.notifyScaleLegend('ni-axis-changed', evt.detail.element);\n        });\n\n        that.addEventListener('ni-cursor-changed', function (evt) {\n            that.updateGraphConfig();\n            that.notifyCursorLegend('ni-cursor-changed', evt.detail.element);\n        });\n\n        that.addEventListener('ni-cartesian-plot-changed', function (evt) {\n            that.updateGraphConfigWhenPlotsUpdatesAreEnabled();\n            that.notifyPlotLegend('ni-cartesian-plot-changed', evt.detail.element);\n        });\n\n        that.addEventListener('ni-cartesian-plot-renderer-changed', function (evt) {\n            that.updateGraphConfigWhenPlotsUpdatesAreEnabled();\n            that.notifyPlotLegend('ni-cartesian-plot-renderer-changed', evt.detail.originalSource);\n        });\n\n        that.addEventListener('ni-cartesian-plot-renderer-attached', function (evt) {\n            that.updateGraphConfigWhenPlotsUpdatesAreEnabled();\n            that.notifyPlotLegend('ni-cartesian-plot-renderer-attached', evt.detail.originalSource);\n        });\n\n        that.addEventListener('ni-cartesian-plot-renderer-detached', function (evt) {\n            that.updateGraphConfigWhenPlotsUpdatesAreEnabled();\n            that.notifyPlotLegend('ni-cartesian-plot-renderer-detached', evt.detail.originalSource);\n        });\n\n        that.addEventListener('ni-graph-tools-changed', function () {\n            that.updateGraphConfig();\n        });\n    };\n\n    proto.registerPlotLegend = function (plotLegend) {\n        this.plotLegend = plotLegend;\n    };\n\n    proto.notifyPlotLegend = function (name, originalSource) {\n        var eventConfig;\n\n        if (this.plotLegend !== null) {\n            eventConfig = {\n                bubbles: false,\n                cancelable: true,\n                detail: {\n                    element: this,\n                    originalSource: originalSource\n                }\n            };\n\n            this.plotLegend.dispatchEvent(new CustomEvent(name, eventConfig));\n        }\n    };\n\n    proto.registerCursorLegend = function (cursorLegend) {\n        var i;\n        this.cursorLegend = cursorLegend;\n        if (this.cursors.length > 0) {\n            for (i = 0; i < this.cursors.length; i++) {\n                this.notifyCursorLegend('ni-cursor-attached', this.cursors[i]);\n            }\n        }\n    };\n\n    proto.notifyCursorLegend = function (name, originalSource) {\n        var eventConfig;\n\n        if (this.cursorLegend !== null) {\n            eventConfig = {\n                bubbles: false,\n                cancelable: true,\n                detail: {\n                    element: this,\n                    originalSource: originalSource\n                }\n            };\n\n            this.cursorLegend.dispatchEvent(new CustomEvent(name, eventConfig));\n        }\n    };\n\n    proto.registerScaleLegend = function (scaleLegend) {\n        var i;\n        this.scaleLegend = scaleLegend;\n        if (this.axes.length > 0) {\n            for (i = 0; i < this.axes.length; i++) {\n                this.notifyScaleLegend('ni-cartesian-axis-attached', this.axes[i]);\n            }\n        }\n    };\n\n    proto.notifyScaleLegend = function (name, originalSource) {\n        var eventConfig;\n\n        if (this.scaleLegend !== null) {\n            eventConfig = {\n                bubbles: false,\n                cancelable: true,\n                detail: {\n                    element: this,\n                    originalSource: originalSource\n                }\n            };\n\n            this.scaleLegend.dispatchEvent(new CustomEvent(name, eventConfig));\n        }\n    };\n\n    proto.registerGraphTools = function (graphTools) {\n        var that = this;\n        this.graphTools = graphTools;\n\n        this.updateGraphConfig();\n\n        $(this.graphdiv).on('plotselected', function (event, ranges) {\n            that.notifyGraphTools('ni-cartesian-graph-box-selected', { ranges: ranges });\n        });\n\n        $(this.graphdiv).on('plotpan', function (event, ranges) {\n            that.notifyGraphTools('ni-cartesian-graph-interaction', { ranges: ranges });\n        });\n\n        $(this.graphdiv).on('plotzoom', function (event, ranges) {\n            that.notifyGraphTools('ni-cartesian-graph-interaction', { ranges: ranges });\n        });\n\n        $(this.graphdiv).on('re-center', function (event) {\n            that.notifyGraphTools('ni-cartesian-graph-reCenter', event);\n        });\n    };\n\n    proto.notifyGraphTools = function (name, originalSource) {\n        var eventConfig;\n\n        if (this.graphTools !== null) {\n            eventConfig = {\n                bubbles: false,\n                cancelable: true,\n                detail: {\n                    element: this,\n                    originalSource: originalSource\n                }\n            };\n\n            this.graphTools.dispatchEvent(new CustomEvent(name, eventConfig));\n        }\n    };\n\n    // find the graph legend elements that were created before the graph element and attach them\n    proto.attachLegends = function () {\n\t\t var graphElement = this,\n            legendTags = [\n                'ni-cursor-legend'.toUpperCase(),\n                'ni-plot-legend'.toUpperCase(),\n                'ni-cursor-legend'.toUpperCase(),\n                'ni-graph-tools'.toUpperCase()\n            ],\n\n            children = this.parentElement.children,\n            myLegends = [];\n\n        for (var i = 0; i < children.length; i++) {\n            var element = children[i];\n            if ((legendTags.indexOf(element.tagName) !== -1) && (element.graphName === this.niControlId)) {\n                // this is a legend element that references this graph element\n                myLegends.push(element);\n            }\n        }\n\n        myLegends.forEach(function (legend) {\n            legend.attachToGraph(graphElement);\n        });\n    };\n\n    proto.propertyUpdated = function (propertyName) {\n        parent.prototype.propertyUpdated.call(this, propertyName);\n\n        switch (propertyName) {\n            case 'value':\n                this.parsedValue = JSON.parse(this.value);\n                this.updateData();\n                break;\n            case 'plotAreaMargin':\n                this.updateGraphConfig();\n                break;\n        }\n    };\n\n    proto.format = function () {\n        var args = arguments;\n        var str = args[0];\n        return str.replace(/{(\\d+)}/g, function (match, number) {\n            var index = parseInt(number) + 1;\n            var item = args[index];\n\n            if (typeof item !== 'undefined') {\n                var len1 = item.toFixed(2).length;\n                var len2 = item.toExponential(2).length;\n                if (len1 < len2) {\n                    return item.toFixed(2);\n                } else {\n                    return item.toExponential(2);\n                }\n            } else {\n                return match;\n            }\n        });\n    };\n\n    proto.setHover = function (graphData, graphSettings) {\n        var i,\n            isHoverable = false;\n\n        for (i = 0; i < graphData.length; i++) {\n            if (graphData[i].hoverable) {\n                isHoverable = true;\n                break;\n            }\n        }\n\n        if (isHoverable === true) {\n            if (graphSettings.grid === undefined) {\n                graphSettings.grid = {};\n            }\n\n            graphSettings.grid.hoverable = isHoverable;\n        } else {\n            if (this.tooltip !== null) {\n                $(this.tooltip).hide();\n            }\n        }\n    };\n\n    proto.setGridStyle = function (gridEl, graphSettings) {\n        var grid = graphSettings.grid;\n        var style = window.getComputedStyle(gridEl);\n        var borderStyle = style.borderStyle;\n\n        var borderBottomWidth = style.borderBottomWidth.replace('px','');\n        var borderTopWidth = style.borderTopWidth.replace('px','');\n        var borderLeftWidth = style.borderLeftWidth.replace('px','');\n        var borderRightWidth = style.borderRightWidth.replace('px','');\n        var borderWidth = {top: Number(borderTopWidth), bottom: Number(borderBottomWidth),\n            left: Number(borderLeftWidth), right: Number(borderRightWidth)};\n\n        var color = style.borderColor;\n        var bgColor = style.backgroundColor;\n\n        grid.borderWidth = (borderStyle === 'solid') ? borderWidth : 0;\n        grid.borderColor = color;\n        grid.color = style.color;\n        grid.backgroundColor = bgColor;\n    };\n\n}(NationalInstruments.HtmlVI.Elements.CartesianGraphBase, NationalInstruments.HtmlVI.Elements.Visual));\n","//****************************************\n// Cartesian Graph Prototype\n// DOM Registration: HTMLNICartesianGraph\n// National Instruments Copyright 2017\n//****************************************\n\n/**\n## ni-cartesian-graph\n\n> A custom element that allows to graph one or multiple data sets.\n\nAn ni-cartesian-graph is a declarative way, that uses custom elements, to add a graph\nto a web page. Specify your data sets using the value attribute and customize how\nthe data is renderended using nested custom elements such as *ni-cartesian-axis*,\n*ni-cartesian-plot*, *ni-cartesian-plot-renderer* or *ni-cursor*.\n\nExample showing how you can render a graph of prime number versus fibonacci numbers.\n```html\n<ni-cartesian-graph value=\"[[2, 3, 5, 7, 11, 13, 17, 19],\n                          [0, 1, 1, 2, 3, 5, 8, 13]]\">\n  <ni-cartesian-axis show label=\"Index\" auto-scale axis-position=\"bottom\"></ni-cartesian-axis>\n  <ni-cartesian-axis show label=\"Value\" auto-scale axis-position=\"left\"></ni-cartesian-axis>\n  <ni-cartesian-plot show label=\"Prime Numbers\">\n    <ni-cartesian-plot-renderer line-width=\"2\" line-stroke=\"red\">\n    </ni-cartesian-plot-renderer>\n  </ni-cartesian-plot>\n  <ni-cartesian-plot show label=\"Fibonacci Numbers\">\n    <ni-cartesian-plot-renderer line-width=\"2\" line-stroke=\"blue\">\n    </ni-cartesian-plot-renderer>\n  </ni-cartesian-plot>\n</ni-cartesian-graph>\n```\n*/\n\nNationalInstruments.HtmlVI.Elements.CartesianGraph = function () {\n    'use strict';\n};\n\n(function (child, parent) {\n    'use strict';\n    // Static Private Reference Aliases\n    var $ = NationalInstruments.Globals.jQuery;\n    var NI_SUPPORT = NationalInstruments.HtmlVI.NISupport;\n\n    NI_SUPPORT.inheritFromParent(child, parent);\n    var proto = child.prototype;\n    /** ### ni-cartesian-graph properties*/\n\n    /// include ./ni-cartesian-graph-base.js\n\n\n    /**\n    ### ni-cartesian-graph methods\n\n    **setData** is the prefered method to write data to a graph. The other\n    option, writing to the *value* property of the element is only recomended\n    for rarely changed small datasets, since it consumes more memory and CPU\n    due to the serialization/deserialization needed.\n\n    ```js\n    // graph needs to be ready before calling any methods on it\n    var graph = document.querySelector('#myGraph');\n    graph.setData([1, 2, 3, 4, 5]);\n    ```\n    */\n    proto.updateData = function () {\n        var graph = this.graph;\n\n        graph.setData(this.createData(this.plots, this.convertToFlotFormat(JSON.parse(this.value))));\n        graph.setupGrid();\n        graph.draw();\n    };\n\n    /// include ./DataPipeline/niGraphDataPipeline.js\n\n    proto.defineElementInfo(proto, 'ni-cartesian-graph', 'HTMLNICartesianGraph');\n}(NationalInstruments.HtmlVI.Elements.CartesianGraph, NationalInstruments.HtmlVI.Elements.CartesianGraphBase));\n","//****************************************\n// Chart custom element\n// DOM Registration: HTMLNIChart\n// National Instruments Copyright 2017\n//****************************************\n\n/**\n## ni-chart\n\n> A custom element that allows to chart one or multiple data sets.\n\nThe difference between a graph and a chart is that a graph plots directly the data\nsets provided but the chart uses a buffer of historical values, called a\nHistoryBuffer for data handling.\n\nAs you append new values to the charts' History buffer the chart is updated as\nneeded, on the next browser animation frame.\n\nExample:\n\n```html\n<ni-chart id=\"chart1\" bufferSize=\"1024\">\n    <ni-cartesian-axis show label=\"Time\" axis-position=\"bottom\" auto-scale></ni-cartesian-axis>\n    <ni-cartesian-axis show label=\"Amplitude\"  axis-position=\"left\" auto-scale></ni-cartesian-axis>\n    <ni-cartesian-plot show label=\"Plot 1\">\n      <ni-cartesian-plot-renderer line-width=\"2\" line-stroke=\"#a84716\"></ni-cartesian-plot-renderer>\n    </ni-cartesian-plot>\n</ni-chart>\n\n<script>\n  var historyBuffer = $('#chart1').getHistoryBuffer();\n\n  // write 1000 values into the chart's history buffer\n  for (var i = 0; i < 10; i++) {\n    historyBuffer.push(Math.sin(i));\n    i += 0.01;\n  }\n</script>\n```\n\nThe HistoryBuffer API is described [here](historyBuffer.md).\n\n## Data types supported by ni-chart\n\nTo add data to the chart you need to write it into the history buffer. Here are\nexamples for adding numbers and arrays of numbers to the history buffer.\n\n* **Numbers**\n```js\n    var chart = document.querySelector('#myChart');\n    var hb = chart.getHistoryBuffer();\n\n    hb.push(5); // add 5 to the history buffer\n```\nThis will render a single plot\n\n* **multiple Numbers**\n```js\n    var chart = document.querySelector('#myChart');\n    var hb = chart.getHistoryBuffer();\n\n    hb.push([5, 7, 8]); // adds 5 to first data series,\n                        // 7 to the second one and 8 to the third one\n```\nThis will render 3 plots\n\n* **array of Numbers**\n```js\n    var chart = document.querySelector('#myChart');\n    var hb = chart.getHistoryBuffer();\n\n    hb.appendArray([5, 7, 8]); // add 5, 7 and 8 to first data series\n```\nThis will render a single plot.\n\n* **arrays of arrays of Numbers**\n```js\n    var chart = document.querySelector('#myChart');\n    var hb = chart.getHistoryBuffer();\n\n    hb.appendArray([[5, 7], [8, 9]]); // add 5 and 7 to first data series\n                                     // and 8 and 9 to the second one\n```\nThis will render two plots.\n\n\nWhen writing values to multiple plots make sure the history buffer is the same\nsize as the number of data series you write to. Use [history buffer's](historyBuffer.md) *setWidth*\nmethod to change the number of data series in the chart.\n*/\n\nNationalInstruments.HtmlVI.Elements.Chart = function () {\n    'use strict';\n};\n\n(function (child, parent, global) {\n    'use strict';\n    // Static Private Reference Aliases\n    var NI_SUPPORT = NationalInstruments.HtmlVI.NISupport;\n    var chartDataPipeline = NationalInstruments.HtmlVI.DataPipeline.ChartDataPipeline;\n\n    NI_SUPPORT.inheritFromParent(child, parent);\n    var proto = child.prototype;\n\n    // Static Private Variables\n    // None\n\n    // Static Private Functions\n    // None\n\n    /** ### ni-chart properties*/\n    proto.addAllProperties = function (targetPrototype) {\n        parent.prototype.addAllProperties.call(this, targetPrototype);\n\n        /** **buffer-size** (number) - the size of the chart history buffer */\n        proto.addProperty(targetPrototype, {\n            propertyName: 'bufferSize',\n            defaultValue: 1024\n        });\n    };\n\n    /** ### ni-chart methods*/\n\n    /** **setHistoryBuffer(historyBuffer)** - changes the internal history buffer\n    of the chart to the provided one*/\n    proto.setHistoryBuffer = function (historyBuffer) {\n        this.historyBuffer = historyBuffer;\n    };\n\n    /** **getHistoryBuffer()** - returns a reference to the internal history\n    buffer of the chart*/\n    proto.getHistoryBuffer = function () {\n        return this.historyBuffer;\n    };\n\n    proto.createdCallback = function () {\n        parent.prototype.createdCallback.call(this);\n\n        // Public Instance Properties\n        this.historyBuffer = new global.HistoryBuffer(this.bufferSize, 1);\n        NationalInstruments.HtmlVI.DataPipeline.ChartDataPipeline.prototype.loadValueIntoHistoryBuffer(JSON.parse(this.value), this.historyBuffer);\n\n        // Private Instance Properties\n        // None\n    };\n\n    proto.convertToFlotFormat = function (value) {\n        return chartDataPipeline.prototype.toFlot(this, value);\n    };\n\n    proto.getSettings = function () {\n        var settings = parent.prototype.getSettings.call(this);\n\n        settings.series.historyBuffer = this.historyBuffer;\n\n        return settings;\n    };\n\n    proto.defineElementInfo(proto, 'ni-chart', 'HTMLNIChart');\n}(NationalInstruments.HtmlVI.Elements.Chart, NationalInstruments.HtmlVI.Elements.CartesianGraphBase, typeof global === 'object' && global ? global : this));\n","//****************************************\n// IntensityGraph Custom Element\n// DOM Registration: HTMLNIIntensityGraph\n// National Instruments Copyright 2017\n//****************************************\n\n/**\n## ni-intensity-graph\n\n> A custom element that allows to plot a 2D data set as a gradient map.\n\nAn ni-intensity-graph is a declarative way, that uses custom elements, to add an\nintensity graph to a web page. Specify your data sets using the value attribute\nand customize how the data is renderended using nested custom elements such as\n*ni-cartesian-axis*, *ni-color-scale*.\n\nExample:\n```html\n<ni-intensity-graph id=\"graph1\" value=\"[[0.1, 0.2], [0.3, 0.4], [0.5, 0.6]]\">\n    <ni-cartesian-axis label=\"X\" show show-label axis-position=\"bottom\" auto-scale grid-lines></ni-cartesian-axis>\n    <ni-cartesian-axis label=\"Y\" show show-label axis-position=\"left\" auto-scale grid-lines></ni-cartesian-axis>\n    <ni-color-scale label=\"Color Scale\" show show-label\n        markers='[{\"value\":0,\"color\":\"rgba(0,0,0,1)\"},{\"value\":50,\"color\":\"rgba(0,0,255,1)\"},{\"value\":100,\"color\":\"rgba(255,255,255,1)\"}]'\n        high-color=\"rgba(255,255,255,1)\" low-color=\"rgba(0,0,0,1)\">\n    </ni-color-scale>\n</ni-intensity-graph>\n```\n*/\n\nNationalInstruments.HtmlVI.Elements.IntensityGraph = function () {\n    'use strict';\n};\n\n// Static Public Variables\nNationalInstruments.HtmlVI.Elements.IntensityGraph.ScaleTypeEnum = Object.freeze({\n    COLORSCALE: 'colorScale',\n    COLORSCALEGRADIENT: 'colorScaleGradient'\n});\n\n(function (child, parent) {\n    'use strict';\n    // Static Private Reference Aliases\n    var NI_SUPPORT = NationalInstruments.HtmlVI.NISupport;\n    var SCALETYPE_ENUM = NationalInstruments.HtmlVI.Elements.IntensityGraph.ScaleTypeEnum;\n\n    NI_SUPPORT.inheritFromParent(child, parent);\n    var proto = child.prototype;\n\n    // Static Private Variables\n    var h = 50;\n    var w = 100;\n    var parsedData = null;\n\n    // Static Private Functions\n    // None\n\n    // Public Prototype Methods\n    proto.dataRange = function () {\n        if (parsedData === null || parsedData.length === 0) {\n            return { dataMin: 0, dataMax: Math.sqrt(h * h + w * w) };\n        } else {\n            var tempMin = Math.min();\n            var tempMax = Math.max();\n            for (var i = 0; i < parsedData.length; i++) {\n                var buf = parsedData[i];\n                for (var j = 0; j < buf.length; j++) {\n                    if (buf[j] > tempMax) {\n                        tempMax = buf[j];\n                    }\n\n                    if (buf[j] < tempMin) {\n                        tempMin = buf[j];\n                    }\n                }\n            }\n\n            return { dataMin: tempMin, dataMax: tempMax };\n        }\n    };\n\n    proto.createdCallback = function () {\n        parent.prototype.createdCallback.call(this);\n\n        // Public Instance Properties\n        this.autoScaleColor = false;\n\n        // Private Instance Properties\n        // None\n    };\n\n    proto.getSettings = function () {\n        var settings = {\n            series: {\n                intensitygraph: {\n                    show: true,\n                    legend: true\n                }\n            },\n            axisLabels: {\n                show: true\n            },\n            xaxes: [{}],\n            yaxes: [{}],\n            zoom: {\n                interactive: true,\n                trigger: null\n            },\n            pan: {\n                interactive: true\n            },\n            selection: {\n                mode: null\n            },\n            grid: {\n            }\n        };\n\n        return settings;\n    };\n\n    proto.configureGraph = function () {\n        var i, j, gradient = [];\n        var colorScaleAutoScale, colorScaleMin, colorScaleMax, colorScaleLabel, colorScaleShow, colorScaleFont;\n        var cartesianGraphSettings = this.getSettings();\n        if (this.plotAreaMargin !== '') {\n            if (cartesianGraphSettings.grid === undefined) {\n                cartesianGraphSettings.grid = {};\n            }\n\n            cartesianGraphSettings.grid.margin = JSON.parse(this.plotAreaMargin);\n        }\n\n        var data = JSON.parse(this.value);\n        cartesianGraphSettings.series.intensitygraph.data =  data.length > 0 ? data : this.defaultData();\n        cartesianGraphSettings.xaxes = [];\n        cartesianGraphSettings.yaxes = [];\n        for (i = 0; i < this.axes.length; i++) {\n            var axis = this.axes[i];\n            var a = axis.getViewConfig();\n\n            if (a) {\n                var isColorScale = a.type === SCALETYPE_ENUM.COLORSCALE;\n                if (!isColorScale && (a.position === 'left' || a.position === 'right')) {\n                    cartesianGraphSettings.yaxes.push(a);\n                }\n\n                if (!isColorScale && (a.position === 'bottom' || a.position === 'top')) {\n                    cartesianGraphSettings.xaxes.push(a);\n                }\n\n                if (isColorScale) {\n                    var markers = JSON.parse(a.markers);\n                    for (j = 0; j < markers.length; j++) {\n                        gradient[j] = { value: markers[j].value, color: markers[j].color };\n                    }\n\n                    if (a.autoScale === false) {\n                        colorScaleMin = markers[0].value;\n                        colorScaleMax = markers[markers.length - 1].value;\n                        cartesianGraphSettings.series.intensitygraph.min = colorScaleMin;\n                        cartesianGraphSettings.series.intensitygraph.max = colorScaleMax;\n                    } else {\n                        this.autoScaleColor = true;\n                        var range = this.dataRange();\n                        colorScaleMin = range.dataMin;\n                        colorScaleMax = range.dataMax;\n                        cartesianGraphSettings.series.intensitygraph.min = range.dataMin;\n                        cartesianGraphSettings.series.intensitygraph.max = range.dataMax;\n                    }\n\n                    cartesianGraphSettings.series.intensitygraph.gradient = gradient;\n                    cartesianGraphSettings.series.intensitygraph.lowColor = a.lowColor;\n                    cartesianGraphSettings.series.intensitygraph.highColor = a.highColor;\n\n                    colorScaleAutoScale = a.autoScale;\n                    colorScaleLabel = a.axisLabel;\n                    colorScaleShow = a.show;\n                    colorScaleFont = a.font;\n                }\n            }\n        }\n\n        // add color scale after adding the Y axis\n        cartesianGraphSettings.yaxes.push({\n            type: SCALETYPE_ENUM.COLORSCALEGRADIENT,\n            position: 'right',\n            show: false,\n            min: -0,\n            max: 50,\n            showMinorTicks: false,\n            showTicks: false,\n            gridLines: false,\n            reserveSpace: colorScaleShow,\n            labelWidth: 20,\n            labelHeight: 50,\n            disablePan: true,\n            disableZoom: true\n        });\n        cartesianGraphSettings.yaxes.push({\n            type: SCALETYPE_ENUM.COLORSCALE,\n            position: 'right',\n            min: colorScaleMin,\n            max: colorScaleMax,\n            axisLabel: colorScaleLabel,\n            show: colorScaleShow,\n            showMinorTicks: true,\n            showTicks: true,\n            gridLines: false,\n            font: colorScaleFont,\n            autoScale: colorScaleAutoScale,\n            disablePan: true,\n            disableZoom: true\n        });\n\n        return cartesianGraphSettings;\n    };\n\n    proto.defaultData = function () {\n        return [[]];\n    };\n\n    proto.createData = function (plots, data) {\n        var plotConfig = {};\n\n        if (plots.length > 0) {\n            plotConfig = plots[0].getViewConfig();\n        }\n\n        // the data is placed in the config not the series because it does not match the series data type (and converting it might be expensive)\n        var graphdata = data.length > 0 ? data : this.defaultData();\n        parsedData = graphdata;\n        plotConfig.data = graphdata;\n        var cartesianGraphData = [plotConfig];\n\n        return cartesianGraphData;\n    };\n\n    proto.updateData = function () {\n        var graph = this.graph;\n        var data = this.createData(this.plots, JSON.parse(this.value));\n\n        if (!this.autoScaleColor) {\n            graph.setData(data);\n            graph.setupGrid();\n        } else {\n            this.updateGraphConfig();\n        }\n\n        graph.draw();\n    };\n\n    proto.convertToFlotFormat = function (data) {\n        return data;\n    };\n\n    proto.defineElementInfo(proto, 'ni-intensity-graph', 'HTMLNIIntensityGraph');\n}(NationalInstruments.HtmlVI.Elements.IntensityGraph, NationalInstruments.HtmlVI.Elements.CartesianGraphBase));\n","/*jslint nomen: true, devel:true*/\n/*global NationalInstruments*/\n//****************************************\n// Cartesian Axis Custom Element\n// DOM Registration: HTMLNICartesianAxis\n// National Instruments Copyright 2017\n//****************************************\n\n/**\n## ni-cartesian-axis\n\n> Add axes to a graph.\n\n```html\n<ni-cartesian-graph>\n  <ni-cartesian-axis show grid-lines show-label label=\"Axis 1\" axis-position='bottom'>\n  </ni-cartesian-axis>\n  <ni-cartesian-axis show grid-lines show-label label=\"Axis 2\" axis-position='top'>\n  </ni-cartesian-axis>\n  <ni-cartesian-axis show grid-lines show-label label=\"Axis 3\" axis-position='left'>\n  </ni-cartesian-axis>\n</ni-cartesian-graph>\n```\nMultiple vertical and horizontal axes can be added to a graph and configured.\n\nAxes can be placed to the right, left and on top or bottom of a graph, can use a\nlogarithmic scale if desired and can show time. A relative time format is supported\nalong with the absolute time format.\n\nThe minimum and maximum value of an axis can be specified. Autoscaling according\nto the data ranges dispayed is also possible.\n*/\n\nNationalInstruments.HtmlVI.Elements.CartesianAxis = function () {\n    'use strict';\n};\n\n// Static Public Variables\n// None\n\n(function (child, parent) {\n    'use strict';\n    // Static Private Reference Aliases\n    var NI_SUPPORT = NationalInstruments.HtmlVI.NISupport;\n\n    NI_SUPPORT.inheritFromParent(child, parent);\n    var proto = child.prototype;\n    var NINumericFormatters = window.NINumericFormatters;\n\n    // Static Private Variables\n    // None\n\n    // Static Private Functions\n    // None\n\n    var escapeHtmlString = function (string) {\n        var entityMap = {\n            '&': '&amp;',\n            '<': '&lt;',\n            '>': '&gt;',\n            '\"': '&quot;',\n            \"'\": '&apos;',\n            '/': '&#x2F;',\n            '`': '&#x60;'\n        };\n\n        return String(string).replace(/[&<>\"'`\\/]/g, function fromEntityMap (s) {\n            return entityMap[s];\n        });\n    };\n\n    var isTimeAxis = function (format) {\n        return (format.indexOf('LVTime') === 0) || (format.indexOf('LVRelativeTime') === 0);\n    };\n\n    var toFlotTimeFormat = function (format) {\n        if (format.indexOf('LVTime') === 0) {\n            return '%A';\n        }\n\n        if (format.indexOf('LVRelativeTime') === 0) {\n            return '%r';\n        }\n\n        return null;\n    };\n\n    var siTickFormatter = function (num, axis) {\n        return NINumericFormatters.prototype.toSiNotation(num, axis.tickDecimals);\n    };\n\n    var roundUsing = function (roundFunction, number, precisionDigits) {\n        var precision = Math.pow(10, precisionDigits);\n        var tempNumber = number * precision;\n        tempNumber = roundFunction(tempNumber);\n\n        return tempNumber / precision;\n    };\n\n    // Nx or Gx\n    // where N is for Fixed Notation and G for Significant Digits Precision\n    // x is a natural number representing the number of decimals/digits\n    var getDecTickFormatter = function (options) {\n        if (options.indexOf('G') === -1 && options.indexOf('N') === -1) {\n            //use flot default tick formatter\n            return null;\n        }\n\n        return function (num) {\n            var len = parseInt(options.slice(1));\n            var value = num;\n\n            if (options.indexOf('G') === 0) {\n                return NINumericFormatters.prototype.toDecPrecisionNotation(value, len);\n            } else {\n                value = roundUsing(Math.floor, num, len);\n                return NINumericFormatters.prototype.toDecFixedNotation(value, len);\n            }\n        };\n    };\n\n    var chooseTickFormatter = function (format, showTickLabels) {\n        if (format.indexOf('LVSI') === 0) {\n            return siTickFormatter;\n        }\n        // 'LVRelativeSeconds:Nx' or 'LVRelativeSeconds:Gx'\n        // Ex: 'LVRelativeSeconds:N4'\n        // where N represents the Fixed Notation,\n        // G represents the Significant Digits Precision and\n        // x is a number representing the number of decimals/digits\n        if (format.indexOf('LVRelativeSeconds') === 0) {\n            var colonMarkIndex = 18,\n                decFormatTypeSubstring = format.slice(colonMarkIndex);\n            return getDecTickFormatter(decFormatTypeSubstring);\n        }\n\n        // use flot tick formatter\n        return null;\n    };\n\n    /**### ni-cartesian-axis properties*/\n    proto.addAllProperties = function (targetPrototype) {\n        parent.prototype.addAllProperties.call(this, targetPrototype);\n\n        /** **axis-ref** - an axis id used to bind plots to the axes. Default: ''*/\n        proto.addProperty(targetPrototype, {\n            propertyName: 'axisRef',\n            defaultValue: '',\n        });\n\n        /** **show** (boolean) - if true the axis will be visible. Default: false*/\n        proto.addProperty(targetPrototype, {\n            propertyName: 'show',\n            defaultValue: false\n        });\n\n        /** **label** (string) - the name of the axis. Default: '' */\n        proto.addProperty(targetPrototype, {\n            propertyName: 'label',\n            defaultValue: ''\n        });\n\n        /**\n        **axis-position** (string) - the position of the axis. Default: 'left'\n         Accepted values: 'top', 'bottom', 'left' and 'right'\n        */\n        proto.addProperty(targetPrototype, {\n            propertyName: 'axisPosition',\n            defaultValue: 'left'\n        });\n\n        /** **show-label** (boolean) - if true the axis label will be visible.\n        Default: false */\n        proto.addProperty(targetPrototype, {\n            propertyName: 'showLabel',\n            defaultValue: false\n        });\n\n        /** **minimum** (number) - the minimum axis value. Default: 0*/\n        proto.addProperty(targetPrototype, {\n            propertyName: 'minimum',\n            defaultValue: 0\n        });\n\n        /** **maximum** (number) - the maximum axis value. Default: 1*/\n        proto.addProperty(targetPrototype, {\n            propertyName: 'maximum',\n            defaultValue: 1\n        });\n\n        /** **auto-scale** (boolean) - if true the axis will adapt to the data\n        ranges of the plots assigned to that axis. Default: false*/\n        proto.addProperty(targetPrototype, {\n            propertyName: 'autoScale',\n            defaultValue: false\n        });\n\n        /** **log-scale** (boolean) - if true the axis will be a log axis. Default: false*/\n        proto.addProperty(targetPrototype, {\n            propertyName: 'logScale',\n            defaultValue: false\n        });\n\n        /**\n        **format** (string) - the format of the tick labels. Default: false\n        TODO: document the format\n        */\n        proto.addProperty(targetPrototype, {\n            propertyName: 'format',\n            defaultValue: ''\n        });\n\n        /** **show-tick-labels** (string) - which of the tick labels are visible.\n        Possible values: 'none', 'endpoints', 'major' and 'all'. Default: 'all'.\n        For 'endpoints' only the minimum and the maximum values will be visible\n        at the edges of the axis. To make some intermediary values visible use\n        'major', and 'all' to show all of them.*/\n        proto.addProperty(targetPrototype, {\n            propertyName: 'showTickLabels',\n            defaultValue: 'all'\n        });\n\n        /** **grid-lines** (boolean) - if true the grid lines for the axis will\n        be visible. Default: false*/\n        proto.addProperty(targetPrototype, {\n            propertyName: 'gridLines',\n            defaultValue: false\n        });\n\n        /** **show-ticks** (boolean) - if true the tick lines for the axis will\n        be visible. A tick line is a short line which connects the tick label with\n        the axis. Default: false*/\n        proto.addProperty(targetPrototype, {\n            propertyName: 'showTicks',\n            defaultValue: false\n        });\n\n        /** **show-minor-ticks** (boolean) - if true the minor tick lines for the axis\n        will be visible. Minor tick lines are short lines (half of the tick line\n        length) which subdivide the interval between tick lines in five intervals.\n        Default: false*/\n        proto.addProperty(targetPrototype, {\n            propertyName: 'showMinorTicks',\n            defaultValue: false\n        });\n    };\n\n    proto.createdCallback = function () {\n        parent.prototype.createdCallback.call(this);\n\n        // Public Instance Properties\n        // None\n\n        // Private Instance Properties\n        this._parentGraph = undefined;\n    };\n\n    proto.sendEventToParentGraph = function (name) {\n        var eventConfig;\n\n        if (this._parentGraph !== undefined) {\n            eventConfig = {\n                bubbles: true,\n                cancelable: true,\n                detail: {\n                    element: this\n                }\n            };\n\n            this._parentGraph.dispatchEvent(new CustomEvent(name, eventConfig));\n        }\n    };\n\n    proto.attachedCallback = function () {\n        var firstCall = parent.prototype.attachedCallback.call(this);\n\n        if (this.parentElement instanceof NationalInstruments.HtmlVI.Elements.CartesianGraphBase) {\n            this._parentGraph = this.parentElement;\n            this.sendEventToParentGraph('ni-cartesian-axis-attached');\n        } else {\n            NI_SUPPORT.error('Axis with following id does not have a parentGraph', this.niControlId);\n            this._parentGraph = undefined;\n        }\n\n        return firstCall;\n    };\n\n    proto.propertyUpdated = function (propertyName) {\n        parent.prototype.propertyUpdated.call(this, propertyName);\n\n        this.sendEventToParentGraph('ni-axis-changed');\n    };\n\n    proto.detachedCallback = function () {\n        parent.prototype.detachedCallback.call(this);\n\n        this.sendEventToParentGraph('ni-cartesian-axis-detached');\n        this._parentGraph = undefined;\n    };\n\n    proto.setFont = function (fontSize, fontFamily, fontWeight, fontStyle, textDecoration) {\n        parent.prototype.setFont.call(this, fontSize, fontFamily, fontWeight, fontStyle, textDecoration);\n\n        this.sendEventToParentGraph('ni-axis-changed');\n    };\n\n    // here we transform the configuration from the one used by the custom element to the one understood by Flot\n    proto.getViewConfig = function () {\n        var currStyle = window.getComputedStyle(this);\n\n        var flotConfig = {\n            axisLabel: this.showLabel ? escapeHtmlString(this.label) : undefined,\n            show: this.show,\n            position: this.axisPosition,\n            min: this.autoScale ? undefined : this.minimum,\n            max: this.autoScale ? undefined : this.maximum,\n            mode: this.logScale ? 'log' : 'linear',\n            element: this,\n            format: isTimeAxis(this.format) ? 'time' : null,\n            timeformat: toFlotTimeFormat(this.format),\n            tickFormatter: chooseTickFormatter(this.format, this.showTickLabels),\n            showTickLabels: this.showTickLabels,\n            gridLines: this.gridLines,\n            showTicks: this.showTicks,\n            showMinorTicks: this.showMinorTicks,\n            color: currStyle.color,\n            font: {\n                size: parseFloat(currStyle.fontSize),\n                style: currStyle.fontStyle,\n                weight: currStyle.fontWeight,\n                family: currStyle.fontFamily,\n                color: 'inherit'\n            }\n        };\n\n        return flotConfig;\n    };\n\n    // get the flot axis coresponding to this element\n    proto.getFlotAxis = function () {\n        var graph = this._parentGraph.graph;\n        var axes = graph.getAxes();\n        var that = this;\n\n        var key =  Object.keys(axes).filter(function (axis) {\n            return axes[axis].options.element === that;\n        })[0];\n\n        return axes[key];\n    };\n\n    // set the axis min and max to the data min and max\n    proto.scaleOnce = function () {\n        var axis = this.getFlotAxis();\n\n        this.minimum = typeof axis.datamin === 'number' ? axis.datamin : this.minimum;\n        this.maximum = typeof axis.datamax === 'number' ? axis.datamax : this.maximum;\n    };\n\n    // called after an user interacts with the plot so the attributes of the element are in sync with the plot\n    proto.syncWithFlot = function () {\n        var axis = this.getFlotAxis();\n\n        // if axis.options.min isn't set it means this axis is in autoscale mode\n        if (typeof axis.options.min === 'number') {\n            this._autoScale = false;\n            this._minimum = axis.options.min;\n            this._maximum = axis.options.max;\n        } else {\n            this._autoScale = true;\n        }\n\n        if (this._parentGraph !== undefined) {\n            this._parentGraph.notifyScaleLegend('ni-axis-changed', this);\n        }\n    };\n\n    proto.defineElementInfo(proto, 'ni-cartesian-axis', 'HTMLNICartesianAxis');\n}(NationalInstruments.HtmlVI.Elements.CartesianAxis, NationalInstruments.HtmlVI.Elements.Visual));\n","/*jslint nomen: true, devel:true*/\n/*global NationalInstruments*/\n//****************************************\n// Color scale Custom Element\n// DOM Registration: HTMLNIColorScale\n// National Instruments Copyright 2017\n//****************************************\n\n/**\n## ni-color-scale\n\n> A color scale added to an intensity graph is used to configure the color\ngradients.\n\n```html\n<ni-intensity-graph>\n  <ni-cartesian-axis ...></ni-cartesian-axis>\n  <ni-cartesian-axis ...></ni-cartesian-axis>\n  <ni-color-scale show show-label label=\"Color Scale\" low-color=\"blue\" high-color=\"red\">\n  </ni-cartesian-axis>\n</ni-cartesian-graph>\n```\n\nA single color scale can be added to an intensity graph to visualize and control\nthe maping from values to the color gradient displayed.\n\nColor scales are only supported by intensity graphs, when added to other types of\nwebcharts they do nothing.\n\nThe color gradients are described by an array of stops, for example this:\n\n```js\n[\n{\"value\":0,\"color\":\"rgba(0,0,0,1)\"},\n{\"value\":0.5,\"color\":\"rgba(0,0,255,1)\"},\n{\"value\":1,\"color\":\"rgba(255,255,255,1)\"}\n]\n```\n\ndescribes a color gradient going from black at the stop with the value 0, to\nblue at the stop with the value 0.5 and then to white at the stop with the value\n1.\n*/\n\n// Constructor Function: Empty (Not Invoked)\nNationalInstruments.HtmlVI.Elements.ColorScale = function () {\n    'use strict';\n};\n\n// Static Public Variables\n// None\n\n(function (child, parent) {\n    'use strict';\n    // Static Private Reference Aliases\n    var NI_SUPPORT = NationalInstruments.HtmlVI.NISupport;\n    var SCALETYPE_ENUM = NationalInstruments.HtmlVI.Elements.IntensityGraph.ScaleTypeEnum;\n\n    NI_SUPPORT.inheritFromParent(child, parent);\n    var proto = child.prototype;\n\n    // Static Private Variables\n    // None\n\n    // Static Private Functions\n    // None\n\n    /** ### ni-color-scale properties*/\n    proto.addAllProperties = function (targetPrototype) {\n        parent.prototype.addAllProperties.call(this, targetPrototype);\n\n        /** **label** (string) - the name of the color scale. Default: '' */\n        proto.addProperty(targetPrototype, {\n            propertyName: 'label',\n            defaultValue: ''\n        });\n\n        /** **show** (boolean) - if true the color scale will be visible. Default: false */\n        proto.addProperty(targetPrototype, {\n            propertyName: 'show',\n            defaultValue: false\n        });\n\n        /** **show-label** (boolean) - if true the color scale label will be visible. Default: false */\n        proto.addProperty(targetPrototype, {\n            propertyName: 'showLabel',\n            defaultValue: false\n        });\n\n        /** **axis-position** (string) - the position of the color scale. Default: 'right'.\n        Accepted values: *'left'*, *'right'* */\n        proto.addProperty(targetPrototype, {\n            propertyName: 'axisPosition',\n            defaultValue: 'right'\n        });\n\n        /** **high-color** (string) - the color assigned to the values bigger than\n        the color scale maximum. Default: '#ffffff'.\n        Accepted values: a CSS color string*/\n        proto.addProperty(targetPrototype, {\n            propertyName: 'highColor',\n            defaultValue: '#ffffff'\n        });\n\n        /** **low-color** (string) - the color assigned to the values smaller than\n        the color scale minimum. Default: '#000000'.\n        Accepted values: a CSS color string*/\n        proto.addProperty(targetPrototype, {\n            propertyName: 'lowColor',\n            defaultValue: '#000000'\n        });\n\n        /** **markers** (string) - the color gradient used to map values to colorScaleAxis. Default: ''.\n        TODO: document the gradient format, better default value*/\n        proto.addProperty(targetPrototype, {\n            propertyName: 'markers',\n            defaultValue: '' // json string for an array of markers\n        });\n\n        /** **auto-scale** (boolean) - if true the color gradient will strech to adapt to the\n        range of the data set provided. Default: false*/\n        proto.addProperty(targetPrototype, {\n            propertyName: 'autoScale',\n            defaultValue: false\n        });\n\n        /** **minimum** (number) - the minimum axis value. Default: 0*/\n        proto.addProperty(targetPrototype, {\n            propertyName: 'minimum',\n            defaultValue: 0\n        });\n\n        /** **maximum** (number) - the maximum axis value. Default: 1*/\n        proto.addProperty(targetPrototype, {\n            propertyName: 'maximum',\n            defaultValue: 1\n        });\n    };\n\n    proto.createdCallback = function () {\n        parent.prototype.createdCallback.call(this);\n\n        // Public Instance Properties\n        // None\n\n        // Private Instance Properties\n        this._parentGraph = undefined;\n    };\n\n    proto.sendEventToParentGraph = function (name) {\n        var eventConfig;\n\n        if (this._parentGraph !== undefined) {\n            eventConfig = {\n                bubbles: true,\n                cancelable: true,\n                detail: {\n                    element: this\n                }\n            };\n\n            this._parentGraph.dispatchEvent(new CustomEvent(name, eventConfig));\n        }\n    };\n\n    proto.attachedCallback = function () {\n        var firstCall = parent.prototype.attachedCallback.call(this);\n\n        if (this.parentElement instanceof NationalInstruments.HtmlVI.Elements.IntensityGraph) {\n            this._parentGraph = this.parentElement;\n            this.sendEventToParentGraph('ni-cartesian-axis-attached');\n        } else {\n            NI_SUPPORT.error('Color scale with following id does not have an intensity-graph parent', this.niControlId);\n            this._parentGraph = undefined;\n        }\n\n        return firstCall;\n    };\n\n    proto.propertyUpdated = function (propertyName) {\n        parent.prototype.propertyUpdated.call(this, propertyName);\n\n        this.sendEventToParentGraph('ni-axis-changed');\n    };\n\n    proto.detachedCallback = function () {\n        parent.prototype.detachedCallback.call(this);\n\n        this.sendEventToParentGraph('ni-cartesian-axis-detached');\n        this._parentGraph = undefined;\n    };\n\n    proto.setFont = function (fontSize, fontFamily, fontWeight, fontStyle, textDecoration) {\n        parent.prototype.setFont.call(this, fontSize, fontFamily, fontWeight, fontStyle, textDecoration);\n\n        this.sendEventToParentGraph('ni-axis-changed');\n    };\n\n    // getViewConfig transforms the configuration from the one used by the custom element to the one understood by Flot */\n    proto.getViewConfig = function () {\n        var currStyle = window.getComputedStyle(this);\n\n        var flotConfig = {\n            type: SCALETYPE_ENUM.COLORSCALE,\n            axisLabel: this.showLabel ? this.label : undefined,\n            show: this.show,\n            autoScale: this.autoScale,\n            min: this.minimum,\n            max: this.maximum,\n            position: this.axisPosition,\n            lowColor: this.lowColor,\n            highColor: this.highColor,\n            markers: this.markers,\n            font: {\n                size: parseFloat(currStyle.fontSize),\n                style: currStyle.fontStyle,\n                weight: currStyle.fontWeight,\n                family: currStyle.fontFamily,\n                color: 'inherit'\n            },\n            disableZoom: true,\n            disablePan: true\n        };\n\n        return flotConfig;\n    };\n\n    // get the flot axis coresponding to this element\n    proto.getFlotAxis = function () {\n        if (this._parentGraph) {\n            var colorScaleAxis = this._parentGraph.graph\n                    .getYAxes()\n                    .filter(function (axis) {\n                        return axis.options.type === SCALETYPE_ENUM.COLORSCALE;\n                    })[0];\n            return colorScaleAxis;\n        }\n\n    };\n\n    proto.defineElementInfo(proto, 'ni-color-scale', 'HTMLNIColorScale');\n}(NationalInstruments.HtmlVI.Elements.ColorScale, NationalInstruments.HtmlVI.Elements.Visual));\n","/*jslint nomen: true, devel:true*/\n/*global NationalInstruments*/\n//****************************************\n// Cartesian Plot\n// DOM Registration: HTMLNICartesianPlot\n// National Instruments Copyright 2017\n//****************************************\n\n/**\n## ni-cartesian-plot\n\n> A custom element that, along with a nested ni-cartesian-plot-renderer describes\nthe way a data plot is rendered.\n\nA plot is the graphic representation of a data set. A graph or chart can show\nsimultaneously multiple data sets (plots). To customize how a data set, or plot\nis rendered use ni-cartesian-plot elements nested inside a graph or chart\nelement.\n\n```html\n<ni-cartesian-graph>\n  <ni-cartesian-axis axis-ref=\"axis1ref\" show autoscale axis-position=\"bottom\"></ni-cartesian-axis>\n  <ni-cartesian-axis axis-ref=\"axis2ref\" show autoscale axis-position=\"left\"></ni-cartesian-axis>\n  <ni-cartesian-plot show label=\"plot 1\" xaxis=\"axis1ref\" yaxis=\"axis2ref\">\n    add an ni-cartesian-plot-renderer here\n  </ni-cartesian-plot>\n</ni-cartesian-graph>\n```\n*/\n\n\nNationalInstruments.HtmlVI.Elements.CartesianPlot = function () {\n    'use strict';\n};\n\n// Static Public Variables\n// None\n\n(function (child, parent) {\n    'use strict';\n    // Static Private Reference Aliases\n    var NI_SUPPORT = NationalInstruments.HtmlVI.NISupport;\n\n    NI_SUPPORT.inheritFromParent(child, parent);\n    var proto = child.prototype;\n\n    // Static Private Variables\n    var defaultPlotConfig = {\n        lines: {\n            show: false\n        }\n    };\n\n    // Static Private Functions\n    // None\n\n    /** ### ni-cartesian-plot properties */\n    proto.addAllProperties = function (targetPrototype) {\n        parent.prototype.addAllProperties.call(this, targetPrototype);\n\n        /** **show** (boolean) - if true the plot will be shown. Default: false */\n        proto.addProperty(targetPrototype, {\n            propertyName: 'show',\n            defaultValue: false\n        });\n\n        /** **label** (string) - the name of the plot. Default: '' */\n        proto.addProperty(targetPrototype, {\n            propertyName: 'label',\n            defaultValue: ''\n        });\n\n        /** **xaxis** (string) - the X axis that this plot will use. Default: ''.\n        Accepted values: an axis-ref. In case an xaxis with the specified axis-ref\n        is not found the first xaxis is used*/\n        proto.addProperty(targetPrototype, {\n            propertyName: 'xaxis',\n            defaultValue: ''\n        });\n\n        /** **yaxis** (string) - the Y axis that this plot will use. Default: ''.\n        Accepted values: an axis-ref. In case an yaxis with the specified axis-ref\n        is not found the first yaxis is used*/\n        proto.addProperty(targetPrototype, {\n            propertyName: 'yaxis',\n            defaultValue: ''\n        });\n\n        /** **enable-hover** (boolean) - if true, when the mouse hovers close to a point on the plot\n        a tooltip with the point value will be shown */\n        proto.addProperty(targetPrototype, {\n            propertyName: 'enableHover',\n            defaultValue: false\n        });\n\n        /** **hover-format** (string) - specifies the format of the text shown in the tooltip. TODO: document the format*/\n        proto.addProperty(targetPrototype, {\n            propertyName: 'hoverFormat',\n            defaultValue: ''\n        });\n    };\n\n    proto.createdCallback = function () {\n        parent.prototype.createdCallback.call(this);\n\n        // Public Instance Properties\n        // None\n\n        // Private Instance Properties\n        this._parentGraph = undefined;\n    };\n\n    proto.sendEventToParentGraph = function (name, originalSource) {\n        var eventConfig;\n\n        if (this._parentGraph !== undefined) {\n            eventConfig = {\n                bubbles: false,\n                cancelable: true,\n                detail: {\n                    element: this,\n                    originalSource: originalSource\n                }\n            };\n\n            this._parentGraph.dispatchEvent(new CustomEvent(name, eventConfig));\n        }\n    };\n\n    proto.attachedCallback = function () {\n        var firstCall = parent.prototype.attachedCallback.call(this);\n\n        if (this.parentElement instanceof NationalInstruments.HtmlVI.Elements.CartesianGraph || this.parentElement instanceof NationalInstruments.HtmlVI.Elements.Chart) {\n            this._parentGraph = this.parentElement;\n            this.addPlotItemListeners();\n            this.sendEventToParentGraph('ni-cartesian-plot-attached');\n        } else {\n            NI_SUPPORT.error('Plot with following id does not have a parentGraph', this.niControlId);\n            this._parentGraph = undefined;\n        }\n\n        return firstCall;\n    };\n\n    proto.addPlotItemListeners = function () {\n        var that = this;\n        that.addEventListener('ni-cartesian-plot-renderer-attached', function (evt) {\n            if (evt.target === that) {\n                this.plotRenderer = evt.detail.element;\n                this.sendEventToParentGraph('ni-cartesian-plot-renderer-attached', evt.detail.element);\n            }\n        });\n\n        that.addEventListener('ni-cartesian-plot-renderer-detached', function (evt) {\n            if (evt.target === that) {\n                this.plotRenderer = undefined;\n                this.sendEventToParentGraph('ni-cartesian-plot-renderer-detached', evt.detail.element);\n            }\n        });\n\n        that.addEventListener('ni-cartesian-plot-renderer-changed', function (evt) {\n            if (evt.target === that) {\n                this.sendEventToParentGraph('ni-cartesian-plot-renderer-changed', evt.detail.element);\n            }\n        });\n    };\n\n    proto.detachedCallback = function () {\n        parent.prototype.detachedCallback.call(this);\n\n        this.sendEventToParentGraph('ni-cartesian-plot-detached');\n        this._parentGraph = undefined;\n    };\n\n    proto.propertyUpdated = function (propertyName) {\n        parent.prototype.propertyUpdated.call(this, propertyName);\n\n        this.sendEventToParentGraph('ni-cartesian-plot-changed');\n    };\n\n    var getYAxisIndexByNIControlID = function (graph, id) {\n        var index = 0;\n\n        for (var i = 0; i < graph.axes.length; i++) {\n            var axis = graph.axes[i];\n            if ((axis.axisPosition === 'left') || (axis.axisPosition ==='right')) {\n                index ++;\n                if (axis.axisRef === id || axis.niControlId === id) {\n                    return index;\n                }\n            }\n        }\n\n        return 1;\n    }\n\n    var getXAxisIndexByNIControlID = function (graph, id) {\n        var index = 0;\n\n        for (var i = 0; i < graph.axes.length; i++) {\n            var axis = graph.axes[i];\n            if ((axis.axisPosition === 'top') || (axis.axisPosition ==='bottom')) {\n                index ++;\n                if (axis.axisRef === id || axis.niControlId === id) {\n                    return index;\n                }\n            }\n        }\n\n        return 1;\n    }\n\n    proto.getViewConfig = function () {\n        var plotConfig = defaultPlotConfig;\n        if (this.plotRenderer !== undefined && this.show === true) {\n            plotConfig = this.plotRenderer.getViewConfig();\n            plotConfig.hoverable = this.enableHover;\n        }\n\n        plotConfig.xaxis = getXAxisIndexByNIControlID(this._parentGraph, this.xaxis);\n        plotConfig.yaxis = getYAxisIndexByNIControlID(this._parentGraph, this.yaxis);\n\n        return plotConfig;\n    };\n\n    proto.defineElementInfo(proto, 'ni-cartesian-plot', 'HTMLNICartesianPlot');\n}(NationalInstruments.HtmlVI.Elements.CartesianPlot, NationalInstruments.HtmlVI.Elements.Visual));\n","/*jslint nomen: true, devel:true*/\n/*global NationalInstruments*/\n//****************************************\n// Cartesian Plot Renderer\n// DOM Registration: HTMLNICartesianPlotRenderer\n// National Instruments Copyright 2017\n//****************************************\n\n/**\n## ni-cartesian-plot-renderer\n\n> Describes the way a plot is rendered\n\nThe four ways to render a plot are the line renderer, the area fill renderer,\nthe points renderer and the bar renderer. You can combine these in any way you\nlike for a single plot and different plots can have different renderers.\n\nThe fastest one is the line renderer and this is the recomended one for large\ndata sets and if you care about performance.\n\nThe render can be further customized by using the renderer properties.\n*/\n// Constructor Function: Empty (Not Invoked)\nNationalInstruments.HtmlVI.Elements.CartesianPlotRenderer = function () {\n    'use strict';\n};\n\n// Static Public Variables\n// None\n\n(function (child, parent) {\n    'use strict';\n    // Static Private Reference Aliases\n    var NI_SUPPORT = NationalInstruments.HtmlVI.NISupport;\n\n    NI_SUPPORT.inheritFromParent(child, parent);\n    var proto = child.prototype;\n\n    // Static Private Variables\n    // None\n\n    // Static Private Functions\n    // None\n\n    /** ### ni-cartesian-plot-renderer properties */\n    proto.addAllProperties = function (targetPrototype) {\n        parent.prototype.addAllProperties.call(this, targetPrototype);\n\n        /** **line-stroke** (string) - the color of the line drawn. Default: 'auto'.\n        Accepted values: a CSS color string, an empty string or 'auto'. If an empty string\n        is passed the line rendering for the plot is disabled. If 'auto' is passed a color\n        will be automatically assigned to the plot.\n        */\n        proto.addProperty(targetPrototype, {\n            propertyName: 'lineStroke',\n            defaultValue: 'auto'\n        });\n\n        /** **line-width** (number) - the width of the line. Use 1 for maximum\n        performance as thicker lines can be slower, depending on the browser and\n        the graphic card used. Default: 1*/\n        proto.addProperty(targetPrototype, {\n            propertyName: 'lineWidth',\n            defaultValue: 1\n        });\n\n        /** **line-style** (string) - the style of the line drawn. Default: 'solid'.\n        Accepted values: *'solid'*, *'dot'*, *'mediumdash'*, *'dashdot'* and *'largedash'*\n        */\n        proto.addProperty(targetPrototype, {\n            propertyName: 'lineStyle',\n            defaultValue: 'solid'\n        });\n\n        /** **area-fill** (string) - the color of the area fill drawn under/over\n        the line. Default: ''.\n        Accepted values: a CSS color string, an empty string or auto. If an empty string\n        is passed the area fill for the plot is disabled. If 'auto' is passed a color\n        will be automatically assigned to the fill.\n        */\n        proto.addProperty(targetPrototype, {\n            propertyName: 'areaFill',\n            defaultValue: ''\n        });\n\n        /**\n        **area-base-line** (string) - determines the direction the area fill.\n        Default: 'zero'. Accepted values:\n\n        * 'zero': fill the line towards 0\n        * '-infinity': fill the line towards -Infinity.\n        * 'infinity': fill the line towards Infinity.\n        */\n        proto.addProperty(targetPrototype, {\n            propertyName: 'areaBaseLine',\n            defaultValue: 'zero'\n        });\n\n        /** **bar-fill** (string) - the color of the bars drawn. Default: ''.\n        Accepted values: a CSS color string, an empty string or auto. If an empty\n        string is passed the bars rendering for the plot is disabled. If 'auto'\n        is passed a color will be automatically assigned to the bars.\n        */\n        proto.addProperty(targetPrototype, {\n            propertyName: 'barFill',\n            defaultValue: ''\n        });\n\n        /** **point-color** (string) - the color of the points drawn. Default: ''.\n        Accepted values: a CSS color string, an empty string or auto. If an empty\n        string is passed the points rendering for the plot is disabled. If 'auto'\n        is passed a color will be automatically assigned to the points.\n        */\n        proto.addProperty(targetPrototype, {\n            propertyName: 'pointColor',\n            defaultValue: ''\n        });\n\n        /** **point-size** (number) - the size of the points drawn. Default: 5.*/\n        proto.addProperty(targetPrototype, {\n            propertyName: 'pointSize',\n            defaultValue: 5\n        });\n\n        /** **point-shape** (string) - determines the shape of the points.\n        Default: 'ellipse'. Accepted values: 'ellipse', 'square', 'diamond',\n        'triangle', 'cross'\n        */\n        proto.addProperty(targetPrototype, {\n            propertyName: 'pointShape',\n            defaultValue: 'ellipse'\n        });\n    };\n\n    proto.createdCallback = function () {\n        parent.prototype.createdCallback.call(this);\n\n        // Public Instance Properties\n        // None\n\n        // Private Instance Properties\n        this._parentPlot = undefined;\n    };\n\n    proto.sendEventToParentPlot = function (name) {\n        var eventConfig;\n\n        if (this._parentPlot !== undefined) {\n            eventConfig = {\n                bubbles: false,\n                cancelable: true,\n                detail: {\n                    element: this\n                }\n            };\n\n            this._parentPlot.dispatchEvent(new CustomEvent(name, eventConfig));\n        }\n    };\n\n    proto.attachedCallback = function () {\n        var firstCall = parent.prototype.attachedCallback.call(this);\n\n        if (this.parentElement instanceof NationalInstruments.HtmlVI.Elements.CartesianPlot) {\n            this._parentPlot = this.parentElement;\n            this.sendEventToParentPlot('ni-cartesian-plot-renderer-attached');\n        } else {\n            NI_SUPPORT.error('Plot renderer with following id does not have a parentPlot', this.niControlId);\n            this._parentPlot = undefined;\n        }\n\n        return firstCall;\n    };\n\n    proto.propertyUpdated = function (propertyName) {\n        parent.prototype.propertyUpdated.call(this, propertyName);\n\n        this.sendEventToParentPlot('ni-cartesian-plot-renderer-changed');\n    };\n\n    proto.detachedCallback = function () {\n        parent.prototype.detachedCallback.call(this);\n\n        this.sendEventToParentPlot('ni-cartesian-plot-renderer-detached');\n    };\n\n    proto.toFlotLineStyle = function (style) {\n        switch (style) {\n            case 'solid':\n                return undefined;\n            case 'dot':\n                return [this.lineWidth, this.lineWidth * 2];\n            case 'mediumdash':\n                return [this.lineWidth * 3, this.lineWidth * 2];\n            case 'dashdot':\n                return [this.lineWidth * 3, this.lineWidth * 2, this.lineWidth, this.lineWidth * 2];\n            case 'largedash':\n                return [this.lineWidth * 5, this.lineWidth * 3];\n            default:\n                return undefined;\n        }\n    };\n\n    var toFillTowards = function (areaBaseLine) {\n        switch (areaBaseLine) {\n            case 'zero':\n                return 0;\n            case 'infinity':\n                return Infinity;\n            case 'positiveinfinity':\n                return Infinity;\n            case '-infinity':\n                return -Infinity;\n            case 'negativeinfinity':\n                return -Infinity;\n            default:\n                return undefined;\n        }\n    };\n\n    var areaFillOpacity = 0.6;\n\n    proto.getColor = function () {\n        var color = this.lineStroke || this.pointColor || this.areaFill || this.barFill;\n        if (color === 'auto') {\n            return null;\n        }\n\n        return color;\n    }\n\n    proto.getViewConfig = function () {\n        return {\n            color: this.getColor(),\n            lines: {\n                show: this.lineStroke !== '' || this.areaFill !== '',\n                lineWidth: this.lineWidth,\n                fill: this.areaFill !== '' ? areaFillOpacity : false,\n                zero: false,\n                fillTowards: toFillTowards(this.areaBaseLine),\n                dashes: this.toFlotLineStyle(this.lineStyle)\n            },\n            points: {\n                show: this.pointColor !== '',\n                radius: this.pointSize ? this.pointSize / 2 : 2,\n                symbol: this.pointShape\n            },\n            bars: {\n                show: this.barFill !== '',\n                barWidth: 0.75, // TODO this is only valid if the distance between points is 1\n                align: 'center',\n                zero: false\n            }\n        };\n    };\n\n    proto.defineElementInfo(proto, 'ni-cartesian-plot-renderer', 'HTMLNICartesianPlotRenderer');\n}(NationalInstruments.HtmlVI.Elements.CartesianPlotRenderer, NationalInstruments.HtmlVI.Elements.Visual));\n","//****************************************\n// Cursor Custom Element\n// DOM Registration: HTMLNICursor\n// National Instruments Copyright 2017\n//****************************************\n\n/**\n## ni-cursor\n\n> Add cursors to a graph.\n\nSometimes you want to take a measurement off a graph you have made. Cursors allow\nyou to do that.\n\n```html\n<ni-cartesian-graph>\n  <ni-cartesian-axis show grid-lines show-label label=\"Axis 1\" axis-position='bottom'>\n  </ni-cartesian-axis>\n  <ni-cartesian-axis show grid-lines show-label label=\"Axis 2\" axis-position='top'>\n  </ni-cartesian-axis>\n  <ni-cursor label=\"Cursor 1\" show show-label snap-to-data cursor-color=\"#40d387\"></ni-cursor>\n</ni-cartesian-graph>\n```\nMultiple cursors can be added to a graph and configured.\n*/\n\n// Constructor Function: Empty (Not Invoked)\nNationalInstruments.HtmlVI.Elements.Cursor = function () {\n    'use strict';\n};\n\n// Static Public Variables\n// None\n\n(function (child, parent) {\n    'use strict';\n    // Static Private Reference Aliases\n    var $ = NationalInstruments.Globals.jQuery;\n    var NI_SUPPORT = NationalInstruments.HtmlVI.NISupport;\n\n    NI_SUPPORT.inheritFromParent(child, parent);\n    var proto = child.prototype;\n\n    // Static Private Functions\n    // None\n\n    /** ### ni-cursor properties\n    */\n    proto.addAllProperties = function (targetPrototype) {\n        parent.prototype.addAllProperties.call(this, targetPrototype);\n\n        /** **show** (boolean) - if true the cursor will be visible. Default: false*/\n        proto.addProperty(targetPrototype, {\n            propertyName: 'show',\n            defaultValue: false\n        });\n\n        /** **label** (string) - the label of the cursor. Default: '' */\n        proto.addProperty(targetPrototype, {\n            propertyName: 'label',\n            defaultValue: ''\n        });\n\n        /** **show-label** (boolean) - if true the cursor label will be visible.\n        Default: false */\n        proto.addProperty(targetPrototype, {\n            propertyName: 'showLabel',\n            defaultValue: false\n        });\n\n        /**\n        **target-shape** (string) - the shape of cursor. Default: 'ellipse'.\n        Accepted values: 'ellipse', 'square', 'diamond', 'triangle', 'cross'\n        */\n        proto.addProperty(targetPrototype, {\n            propertyName: 'targetShape',\n            defaultValue: 'ellipse'\n        });\n\n        /**\n        **color** (string) - the color of the cursor. Default: 'black'.\n        Accepted values: a CSS color string\n        */\n        proto.addProperty(targetPrototype, {\n            propertyName: 'cursorColor',\n            defaultValue: '#000000'\n        });\n\n        /**\n        **crosshair-style** (string) - the shape of crosshair. Default: 'both'.\n        Accepted values: 'both', 'vertical', 'horizontal', 'none'\n        */\n        proto.addProperty(targetPrototype, {\n            propertyName: 'crosshairStyle',\n            defaultValue: 'both'\n        });\n\n        /** **show-value** (boolean) - if true the coordinates of the cursor will\n        be visible. Default: false */\n        proto.addProperty(targetPrototype, {\n            propertyName: 'showValue',\n            defaultValue: false\n        });\n\n        /** **snap-to-data** (boolean) - if true the cursor will snap to data.\n        Default: false */\n        proto.addProperty(targetPrototype, {\n            propertyName: 'snapToData',\n            defaultValue: false\n        });\n\n        /** **x** (number) - the x target coordinate of the cursor. This coordinate\n        is relative to the visible area of the graph, in the interval 0 to 1.\n        0 is on the left edge and 1 on the one to the right.\n        Default: 0.5 */\n        proto.addProperty(targetPrototype, {\n            propertyName: 'x',\n            defaultValue: 0.5\n        });\n\n        /** **y** (number) - the y target coordinate of the cursor. This coordinate\n        is relative to the visible area of the graph, in the interval 0 to 1.\n        0 is on the bottom edge and 1 on the top one.\n        Default: 0.5 */\n        proto.addProperty(targetPrototype, {\n            propertyName: 'y',\n            defaultValue: 0.5\n        });\n\n        /** **font-family** (string) - the font used for cursor label and values.\n        Default: 'sans-serif' */\n        proto.addProperty(targetPrototype, {\n            propertyName: 'fontFamily',\n            defaultValue: 'sans-serif'\n        });\n\n        /** **font-size** (string) - the font size used for cursor label and values.\n        Default: '10px' */\n        proto.addProperty(targetPrototype, {\n            propertyName: 'fontSize',\n            defaultValue: '10px'\n        });\n\n        /** **font-style** (string) - the font style used for cursor label and values.\n        Default: '' */\n        proto.addProperty(targetPrototype, {\n            propertyName: 'fontStyle',\n            defaultValue: ''\n        });\n\n        /** **font-size** (string) - the font weight used for cursor label and values.\n        Default: '10px' */\n        proto.addProperty(targetPrototype, {\n            propertyName: 'fontWeight',\n            defaultValue: ''\n        });\n    };\n\n    proto.createdCallback = function () {\n        parent.prototype.createdCallback.call(this);\n\n        // Public Instance Properties\n        this.cursor = null;\n\n        // Private Instance Properties\n        this._parentGraph = undefined;\n    };\n\n    proto.sendEventToParentGraph = function (name) {\n        var eventConfig;\n\n        if (this._parentGraph !== undefined) {\n            eventConfig = {\n                bubbles: true,\n                cancelable: true,\n                detail: {\n                    element: this\n                }\n            };\n\n            this._parentGraph.dispatchEvent(new CustomEvent(name, eventConfig));\n        }\n    };\n\n    proto.attachedCallback = function () {\n        var firstCall = parent.prototype.attachedCallback.call(this);\n\n        if (this.parentElement instanceof NationalInstruments.HtmlVI.Elements.CartesianGraph ||\n            this.parentElement instanceof NationalInstruments.HtmlVI.Elements.Chart) {\n            this._parentGraph = this.parentElement;\n            this.sendEventToParentGraph('ni-cursor-attached');\n        } else {\n            NI_SUPPORT.error('Cursor with the following id does not have a parentGraph', this.niControlId);\n            this._parentGraph = undefined;\n        }\n\n        return firstCall;\n    };\n\n    /** TODO: clean up and document the events generated by cursors*/\n    proto.propertyUpdated = function (propertyName) {\n        parent.prototype.propertyUpdated.call(this, propertyName);\n\n        this.sendEventToParentGraph('ni-cursor-changed');\n    };\n\n    proto.detachedCallback = function () {\n        parent.prototype.detachedCallback.call(this);\n\n        this.sendEventToParentGraph('ni-cursor-detached');\n        this._parentGraph = undefined;\n    };\n\n    proto.setCursor = function (cursor) {\n        this.cursor = cursor;\n    };\n\n    proto.updateCursorElement = function (data) {\n        // TODO mraj this._x and this._y are underlying private properties and should not be assigned to directly\n        this._x = this.cursor.position.relativeX;\n        this._y = this.cursor.position.relativeY;\n        $(this).trigger('cursorUpdated', data);\n    };\n\n    proto.getViewConfig = function () {\n        var style = window.getComputedStyle(this);\n        var crosshairStyle =  this.crosshairStyle;\n        var mode;\n\n        if (crosshairStyle === 'both') {\n            mode = 'xy';\n        } else if (crosshairStyle === 'horizontal') {\n            mode = 'y';\n        } else if (crosshairStyle === 'vertical') {\n            mode = 'x';\n        } else if (crosshairStyle === 'none') {\n            mode = '';\n        } else {\n            mode = null;\n        }\n\n        return {\n            show: this.show,\n            showLabel: this.showLabel,\n            showValuesRelativeToSeries: this.showValue ? 0 : undefined,\n            name: this.label,\n            color: this.cursorColor,\n            snapToPlot: this.snapToData ? 0 : undefined,\n            mode: mode,\n            symbol: this.targetShape,\n            fontSize: style.fontSize,\n            fontFamily: style.fontFamily,\n            fontStyle: style.fontStyle,\n            fontWeight: style.fontWeight,\n            position: {\n                relativeX: this.x,\n                relativeY: this.y\n            }\n        };\n    };\n\n    proto.setFont = function (fontSize, fontFamily, fontWeight, fontStyle, textDecoration) {\n        parent.prototype.setFont.call(this, fontSize, fontFamily, fontWeight, fontStyle, textDecoration);\n        this.sendEventToParentGraph('ni-cursor-changed');\n    };\n\n    proto.defineElementInfo(proto, 'ni-cursor', 'HTMLNICursor');\n}(NationalInstruments.HtmlVI.Elements.Cursor, NationalInstruments.HtmlVI.Elements.Visual));\n"]}